{"version":3,"sources":["config/axios.js","actions/tickets1Action.js","selectors/findCustomer.js","selectors/findDepartment.js","selectors/findEmployee.js","Components/tickets1/PendingTicket.js","Components/tickets1/CompletedTicket.js","selectors/ticketSelector.js","Components/tickets1/PieChart.js","Components/tickets1/BarChart.js","actions/customerAction.js","actions/employeesAction.js","actions/departmentsAction.js","Components/tickets1/List.js","Components/tickets1/Show.js","Components/tickets1/Form.js","Components/tickets1/Add.js","Components/tickets1/Edit.js","actions/userAction.js","Components/auth/Login.js","Components/auth/Register.js","Components/auth/Home.js","Components/auth/Account.js","Components/customers/List.js","Components/customers/Show.js","Components/customers/Form.js","Components/customers/Add.js","Components/customers/Edit.js","Components/departments/List.js","Components/departments/Form.js","Components/departments/Add.js","Components/departments/Show.js","Components/departments/Edit.js","Components/employees/List.js","Components/employees/Form.js","Components/employees/Add.js","Components/employees/Show.js","Components/employees/Edit.js","App.js","reducers/userReducer.js","reducers/customerReducer.js","reducers/departmentsReducer.js","reducers/employeesReducer.js","reducers/tickets1Reducer.js","store/configureStore.js","index.js"],"names":["axios","Axios","create","baseURL","startSetTickets","dispatch","get","headers","localStorage","getItem","then","response","tickets","data","console","log","setTickets","type","payload","addTicket","ticket","startRemoveTicket","id","delete","removeTicket","_id","updateTicket","startUpdateStatus","obj","put","status","updateStatus","findCustomer","customers","find","customer","findDepartment","departments","dept","findEmployee","employees","emp","connect","state","props","className","map","isResolved","code","length","name","department","emp1","i","message","priority","to","onClick","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","value","checked","onChange","findTicket","pendingTicket","filter","high","medium","low","width","height","chartType","loader","options","is3D","rootProps","it","finance","maths","chart","startSetCustomer","setCustomer","startSetEmployees","setEmployees","startSetDepartments","setDepartments","TicketList","handlePending","setState","pending","complete","handleComplete","this","Progress","animated","style","marginTop","textAlign","React","Component","match","params","TicketForm","handleSubmit","e","preventDefault","formData","employee","handleChange","target","tempEmployee","push","label","deptId","employeesNewList","handleMultiChange","option","onSubmit","htmlFor","placeholder","isMulti","withRouter","redirect","post","hasOwnProperty","errorMessages","key","errors","join","startAddTicket","history","startUpdateTicket","setUser","user","Login","email","password","timer","setItem","token","startLogin","Register","username","startRegister","Home","handleRemove","window","confirm","removeCustomer","startRemoveCustomer","columns","field","rows","slno","mobile","actions","hover","entriesOptions","entries","pagesAmount","searchTop","searchBottom","FormCustomer","addCustomer","startAddCustomer","updateCustomer","startUpdateCustomer","removeDepartment","startRemoveDepartment","DepartmentsForm","addDepartment","startAddDepartment","updateDepartment","startUpdateDepartment","removeEmployee","startRemoveEmployee","EmployeesForm","FormGroup","Label","Input","Button","color","addEmployee","startAddEmployee","startUpdateEmployee","handleLogout","notice","removeItem","location","href","Navbar","light","expand","Nav","navbar","NavbarBrand","NavItem","Object","keys","Fragment","path","component","Account","CustomerList","exact","AddCustomer","EditCustomer","ShowCustomer","DepartmentsList","AddDepartment","DepartmentUpdate","DepartmentsShow","EmployeesList","AddEmployee","EmployeeUpdate","EmployeesShow","TicketNew","TicketEdit","TicketShow","initialState","userReducer","action","customersReducer","departmentsReducer","employeesReducer","ticketsInitialState","ticketsReducer","configureStore","createStore","combineReducers","applyMiddleware","thunk","store","subscribe","getState","jsx","ReactDOM","render","document","getElementById"],"mappings":"gPAQeA,E,OANDC,EAAMC,OAAO,CAGzBC,QAAS,M,gBCFEC,EAAkB,WAC7B,OAAO,SAACC,GACNL,EACGM,IAAI,WAAY,CACfC,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMC,EAAUD,EAASE,KACzBC,QAAQC,IAAI,cAAeH,GAC3BP,EAASW,EAAWJ,SAIfI,EAAa,SAACJ,GACzB,MAAO,CACLK,KAAM,cACNC,QAASN,IAyCAO,EAAY,SAACC,GACxB,MAAO,CACLH,KAAM,aACNC,QAASE,IAUAC,EAAoB,SAACC,GAChC,OAAO,SAACjB,GACNL,EACGuB,OADH,mBACsBD,GAAM,CACxBf,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMS,EAAST,EAASE,KACxBR,EAhBoB,SAACiB,GAC3B,MAAO,CACLL,KAAM,gBACNC,QAASI,GAaIE,CAAaJ,EAAOK,WAkDxBC,EAAe,SAACN,GAC3B,MAAO,CACLH,KAAM,gBACNC,QAASE,IAIAO,EAAoB,SAACC,GAEhC,OADAd,QAAQC,IAAI,MAAOa,GACZ,SAACvB,GACNL,EACG6B,IADH,mBACmBD,EAAIN,IAAMM,EAAIE,OAAQ,CACrCvB,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACLG,QAAQC,IAAI,iBAAkBJ,EAASE,MACvCR,EAAS0B,EAAapB,EAASE,YAI1BkB,EAAe,SAACX,GAC3B,MAAO,CAAEH,KAAM,gBAAiBC,QAASE,IC9J9BY,EAAe,SAACC,EAAWX,GACpC,OAAOW,EAAUC,MAAK,SAAAC,GAAQ,OAAIA,EAASV,MAAQH,MCD1Cc,EAAgB,SAACC,EAAaf,GACvC,OAAOe,EAAYH,MAAK,SAAAI,GAAI,OAAIA,EAAKb,MAAQH,MCDpCiB,EAAe,SAACC,EAAWlB,GACtC,OAAOkB,EAAUN,MAAK,SAACO,GAAD,OAASA,EAAIhB,MAAQH,M,OC0H7C,IAQeoB,eARS,SAACC,GACvB,MAAO,CACLV,UAAWU,EAAMV,UACjBI,YAAaM,EAAMN,YACnBG,UAAWG,EAAMH,UACjB5B,QAAS+B,EAAM/B,WAGJ8B,EAtHf,SAAuBE,GAwBrB,OACE,8BACE,wBAAOC,UAAU,QAAjB,UACE,gCACE,+BACE,yCACA,0CACA,4CACA,2CACA,yCACA,0CACA,yCACA,wCACA,+CAGJ,gCACGD,EAAMhC,QAAQkC,KAAI,SAAC1B,GACO,IAAD,IAAxB,IAAKA,EAAO2B,WACV,OACE,+BACE,6BAAK3B,EAAO4B,OACgB,IAA3BJ,EAAMX,UAAUgB,QACf,uCACGjB,EAAaY,EAAMX,UAAWb,EAAOe,iBADxC,aACG,EAAgDe,OAGvB,IAA7BN,EAAMP,YAAYY,QACjB,uCAEIb,EAAeQ,EAAMP,YAAajB,EAAO+B,mBAF7C,aAEI,EACID,OAKkB,IAA3BN,EAAMJ,UAAUS,QACf,6BACG7B,EAAOoB,UAAUS,OAAS,GACzB7B,EAAOoB,UAAUM,KAAI,SAACM,EAAMC,GAAO,IAAD,EAChC,OACE,iCACG,IADH,UAEGd,EAAaK,EAAMJ,UAAWY,UAFjC,aAEG,EAAqCF,KAAM,MAFnCG,QAQrB,6BAAKjC,EAAOkC,UACZ,6BAAKlC,EAAOmC,WACZ,6BACE,cAAC,IAAD,CAAMC,GAAE,mBAAcpC,EAAOK,KAA7B,SACE,wBAAQoB,UAAU,2BAAlB,sBAGJ,6BACE,wBACEA,UAAU,wBACVY,QAAS,WA5ER,IAACnC,IA6EaF,EAAOK,IA5ExCiC,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBxD,MAAK,SAACyD,GACHA,EAAOC,QACTV,IAAKC,KAAK,WAAY,8BAA+B,WACrDf,EAAMvC,SAASgB,EAAkBC,SA8DrB,sBASF,6BACE,uBACEL,KAAK,WACLoD,QAASjD,EAAO2B,WAChBuB,SAAU,WA7FT,IAAChD,IA8FaF,EAAOK,IA1FxCmB,EAAMvC,SAASsB,EAAkB,CAAEL,KAAIQ,OAHxB,CACbiB,YAAY,OA8FIG,KAAK,mBArDF9B,EAAOK,kBCgEhC,IAQeiB,eARS,SAACC,GACvB,MAAO,CACLV,UAAWU,EAAMV,UACjBI,YAAaM,EAAMN,YACnBG,UAAWG,EAAMH,UACjB5B,QAAS+B,EAAM/B,WAGJ8B,EAxHf,SAAyBE,GAyBrB,OACE,8BACE,wBAAOC,UAAU,QAAjB,UACE,gCACE,+BACE,yCACA,0CACA,4CACA,2CACA,yCACA,0CACA,yCACA,wCACA,iDAGJ,gCACGD,EAAMhC,QAAQkC,KAAI,SAAC1B,GACM,IAAD,IAAvB,GAAIA,EAAO2B,WACT,OACE,+BACE,6BAAK3B,EAAO4B,OACgB,IAA3BJ,EAAMX,UAAUgB,QACf,uCAEGjB,EAAaY,EAAMX,UAAWb,EAAOe,iBAFxC,aAEG,EAAgDe,OAIvB,IAA7BN,EAAMP,YAAYY,QACjB,uCAEIb,EAAeQ,EAAMP,YAAajB,EAAO+B,mBAF7C,aAEI,EAAsDD,OAKhC,IAA3BN,EAAMJ,UAAUS,QACf,6BACG7B,EAAOoB,UAAUS,OAAS,GACzB7B,EAAOoB,UAAUM,KAAI,SAACM,EAAMC,GAAO,IAAD,EAChC,OACE,yCACGd,EAAaK,EAAMJ,UAAWY,UADjC,aACG,EAAqCF,MAD7BG,QAQrB,6BAAKjC,EAAOkC,UACZ,6BAAKlC,EAAOmC,WACZ,6BACE,cAAC,IAAD,CAAMC,GAAE,mBAAcpC,EAAOK,KAA7B,SACE,wBAAQoB,UAAU,2BAAlB,sBAGJ,6BACE,wBACEA,UAAU,wBACVY,QAAS,WA7EV,IAACnC,IA8EeF,EAAOK,IA7E1CiC,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBxD,MAAK,SAACyD,GACHA,EAAOC,QACTV,IAAKC,KAAK,WAAY,8BAA+B,WACrDf,EAAMvC,SAASgB,EAAkBC,SA+DnB,sBASF,6BACE,uBACEL,KAAK,WACLoD,QAASjD,EAAO2B,WAChBuB,SAAU,WA/FX,IAAChD,IAgGeF,EAAOK,IA5F1CmB,EAAMvC,SAASsB,EAAkB,CAAEL,KAAIQ,OAHxB,CACbiB,YAAY,OAgGMG,KAAK,mBAtDF9B,EAAOK,kB,iBChDrB8C,EAAa,SAAC3D,EAASU,GAClC,OAAOV,EAAQsB,MAAK,SAACd,GAAD,OAAYA,EAAOK,KAAOH,MAEnCkD,EAAgB,SAAC5D,GAC5B,OAAOA,EAAQ6D,QAAO,SAACrD,GAAD,OAAaA,EAAO2B,eC6B5C,IAMeL,eANS,SAACC,GACvB,MAAO,CACLvB,OAAQuB,EAAM/B,QACd4D,cAAeA,EAAc7B,EAAM/B,YAGxB8B,EAxCf,SAAkBE,GAChB9B,QAAQC,IAAI,UAAW6B,EAAM4B,eAC7B,IAAME,EAAO9B,EAAM4B,cAAcC,QAC/B,SAACrD,GAAD,MAAgC,SAApBA,EAAOmC,YACnBN,OACI0B,EAAS/B,EAAM4B,cAAcC,QACjC,SAACrD,GAAD,MAAgC,WAApBA,EAAOmC,YACnBN,OACI2B,EAAMhC,EAAM4B,cAAcC,QAC9B,SAACrD,GAAD,MAAgC,QAApBA,EAAOmC,YACnBN,OAEF,OADDnC,QAAQC,IAAI,SAAU2D,EAAMC,EAAQC,GAEjC,8BACE,cAAC,IAAD,CACEC,MAAO,QACPC,OAAQ,QACRC,UAAU,WACVC,OAAQ,gDACRnE,KAAM,CACJ,CAAC,OAAQ,iBACT,CAAC,OAAQ6D,GACT,CAAC,SAAUC,GACX,CAAC,MAAOC,IAEVK,QAAS,CACPrB,MAAO,kBACPsB,MAAM,GAERC,UAAW,CAAE,cAAe,YCOpC,IAOezC,eAPS,SAACC,GACvB,MAAO,CACLvB,OAAQuB,EAAM/B,QACd4D,cAAeA,EAAc7B,EAAM/B,SACnCyB,YAAaM,EAAMN,eAGRK,EA1Cf,SAAkBE,GAEhB,IAAMwC,EAAKxC,EAAM4B,cAAcC,QAC7B,SAACrD,GAAD,YAA2E,QAA/D,UAAAgB,EAAeQ,EAAMP,YAAajB,EAAO+B,mBAAzC,eAAsDD,SAClED,OACIoC,EAAUzC,EAAM4B,cAAcC,QAClC,SAACrD,GAAD,YAA2E,aAA/D,UAAAgB,EAAeQ,EAAMP,YAAajB,EAAO+B,mBAAzC,eAAsDD,SAClED,OACIqC,EAAQ1C,EAAM4B,cAAcC,QAChC,SAACrD,GAAD,YAA2E,WAA/D,UAAAgB,EAAeQ,EAAMP,YAAajB,EAAO+B,mBAAzC,eAAsDD,SAClED,OAEF,OADAnC,QAAQC,IAAI,SAAUqE,EAAIC,EAASC,GAEjC,8BACE,cAAC,IAAD,CACET,MAAO,QACPC,OAAQ,QACRC,UAAU,MACVC,OAAQ,gDACRnE,KAAM,CACJ,CAAC,cAAe,WAChB,CAAC,KAAMuE,GACP,CAAC,UAAWC,GACZ,CAAC,QAASC,IAEZL,QAAS,CACPM,MAAO,CACL3B,MAAO,0BAGXuB,UAAW,CAAE,cAAe,YC1BtBK,EAAmB,WAC/B,OAAO,SAACnF,GACNL,EACGM,IAAI,aAAc,CACjBC,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMwB,EAAWxB,EAASE,KAE1BR,EAlBmB,SAAC8B,GAC1B,MAAO,CACLlB,KAAM,eACNC,QAASiB,GAeIsD,CAAYtD,SCXhBuD,EAAoB,WAC/B,OAAO,SAACrF,GACNL,EACGM,IAAI,aAAc,CACjBC,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAM6B,EAAY7B,EAASE,KAE3BR,EAlBoB,SAACmC,GAC3B,MAAO,CACLvB,KAAM,gBACNC,QAASsB,GAeImD,CAAanD,SCVjBoD,EAAsB,WACjC,OAAO,SAACvF,GACNL,EACGM,IAAI,eAAgB,CACnBC,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAM0B,EAAc1B,EAASE,KAE7BR,EAlBsB,SAACgC,GAC7B,MAAO,CACLpB,KAAM,kBACNC,QAASmB,GAeIwD,CAAexD,SCP1ByD,E,kDACJ,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAMRmD,cAAgB,WACd,EAAKC,SAAS,CACZC,SAAS,EACTC,UAAU,KAVK,EAanBC,eAAiB,WACf,EAAKH,SAAS,CACZC,SAAS,EACTC,UAAU,KAdZ,EAAKvD,MAAQ,CACXsD,SAAS,EACTC,UAAU,GAJK,E,0CAqBnB,WAQE,OAPiC,GAA7BE,KAAKxD,MAAMhC,QAAQqC,SACrBmD,KAAKxD,MAAMvC,SAASmF,KACpBY,KAAKxD,MAAMvC,SAASuF,KACpBQ,KAAKxD,MAAMvC,SAASqF,KACpBU,KAAKxD,MAAMvC,SAASD,MAIpB,qBAAKyC,UAAU,iBAAf,SACGuD,KAAKxD,MACJ,gCACE,kDAAqBwD,KAAKxD,MAAMhC,QAAQqC,UACxC,qBAAKJ,UAAU,iDAAf,SACE,qBAAKA,UAAU,2BAA2BvB,GAAG,oBAA7C,SACE,qBAAIuB,UAAU,aAAd,UACE,oBAAIA,UAAU,kBAAd,SACE,yBAAQA,UAAU,WAAWY,QAAS2C,KAAKL,cAA3C,oBAEE,sBAAMlD,UAAU,UAAhB,4BAGJ,oBAAIA,UAAU,kBAAd,SACE,wBAAQA,UAAU,WAAWY,QAAS2C,KAAKD,eAA3C,gCAQPC,KAAKzD,MAAMsD,SAAW,cAAC,EAAD,IACtBG,KAAKzD,MAAMuD,UAAY,cAAC,EAAD,IACxB,cAAC,IAAD,CAAM1C,GAAG,eAAT,SACE,wBAAQX,UAAU,yBAAlB,0BAIF,cAACwD,EAAA,EAAD,CACEC,UAAQ,EACRC,MAAO,CAAEC,UAAW,QACpBpC,MACGgC,KAAKxD,MAAMhC,QAAQ6D,QAAO,SAACrD,GAAD,OAAYA,EAAO2B,cAC3CE,OACDmD,KAAKxD,MAAMhC,QAAQqC,OACrB,MAIJ,sBAAKJ,UAAU,YAAf,UACE,oBAAI0D,MAAO,CAAEE,UAAW,SAAUD,UAAW,QAA7C,qCAGA,sBAAK3D,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,WAAW0D,MAAO,CAAEC,UAAW,QAA9C,SACE,cAAC,EAAD,eAMR,8BACE,mD,GAvFaE,IAAMC,WAsGhBjE,eARS,SAACC,GACvB,MAAO,CACLV,UAAWU,EAAMV,UACjBI,YAAaM,EAAMN,YACnBG,UAAWG,EAAMH,UACjB5B,QAAS+B,EAAM/B,WAGJ8B,CAAyBoD,GCnDxC,IASepD,eATS,SAACC,EAAOC,GAC9B,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACLF,OAAQmD,EAAW5B,EAAM/B,QAASU,GAClCW,UAAWU,EAAMV,UACjBI,YAAaM,EAAMN,YACnBG,UAAWG,EAAMH,aAGNE,EAnEf,SAAoBE,GAAQ,IAAD,IACzB,EACEA,EAAMxB,QAAU,GADVK,EAAR,EAAQA,IAAKuB,EAAb,EAAaA,KAAMb,EAAnB,EAAmBA,SAAUgB,EAA7B,EAA6BA,WAAYX,EAAzC,EAAyCA,UAAWc,EAApD,EAAoDA,QAASC,EAA7D,EAA6DA,SAG7D,OACE,qBAAKV,UAAU,0BAAf,SACGD,EAAMxB,OACL,sBAAKyB,UAAU,mBAAmB0D,MAAO,CAAE1B,MAAO,SAAlD,UACE,sBAAKhC,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,oBAAiCG,KACjC,oBAAGH,UAAU,YAAb,uBAE8B,IAA3BD,EAAMX,UAAUgB,SAAhB,UACCjB,EAAaY,EAAMX,UAAWE,UAD/B,aACC,EAAyCe,SAE7C,oBAAGL,UAAU,YAAb,yBAEgC,IAA7BD,EAAMP,YAAYY,SAAlB,UACCb,EAAeQ,EAAMP,YAAac,UADnC,aACC,EAA+CD,SAEnD,oBAAGL,UAAU,YAAb,wBAE8B,IAA3BD,EAAMJ,UAAUS,QACbT,EAAUS,OAAS,GACjBT,EAAUM,KAAI,SAACM,EAAMC,GAAO,IAAD,EACzB,OACE,yCACGd,EAAaK,EAAMJ,UAAWY,UADjC,aACG,EAAqCF,MAD7BG,SAOvB,oBAAGR,UAAU,YAAb,uBAAoCS,KACpC,oBAAGT,UAAU,YAAb,wBAAqCU,QAEvC,8BACE,cAAC,IAAD,CAAMC,GAAE,wBAAmB/B,GAA3B,SACE,wBAAQR,KAAK,SAAS4B,UAAU,6BAAhC,oBAIF,cAAC,IAAD,CAAMW,GAAG,WAAT,SACE,wBAAQvC,KAAK,SAAS4B,UAAU,yBAAhC,0BAON,8BACE,oD,gBCpDJiE,E,kDACJ,WAAYlE,GAAQ,IAAD,8BACjB,cAAMA,IAYRmE,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CACflE,KAAM,EAAKL,MAAMK,KACjBb,SAAU,EAAKQ,MAAMR,SACrBgB,WAAY,EAAKR,MAAMQ,WACvBX,UAAW,EAAKG,MAAMwE,SACtB7D,QAAS,EAAKX,MAAMW,QACpBC,SAAU,EAAKZ,MAAMY,UAEvBzC,QAAQC,IAAI,WAAYmG,GACxB,EAAKtE,MAAMxB,SAAW8F,EAAS5F,GAAK,EAAKsB,MAAMxB,OAAOK,KACtD,EAAKmB,MAAMmE,aAAaG,IAzBP,EA2BnBE,aAAe,SAACJ,GACd,EAAKhB,SAAL,eACGgB,EAAEK,OAAOnE,KAAO8D,EAAEK,OAAOjD,QAE5B,IAAIkD,EAAe,GAEjB,EAAK1E,MAAMJ,UAAUM,KAAI,SAACqE,GACxB,OAAOG,EAAaC,KAAK,CACvBnD,MAAO+C,EAASjE,KAChBzB,IAAK0F,EAAS1F,IACdyB,KAAMiE,EAASjE,KACfsE,MAAOL,EAASjE,KAChBuE,OAAQN,EAAShE,gBAGrB,EAAK6C,SAAS,CAAEsB,iBAEI,eAAlBN,EAAEK,OAAOnE,OACX,EAAK8C,SAAS,CACZ0B,iBAAkB,EAAK/E,MAAM2E,aAAa7C,QACxC,SAAC0C,GAAD,OAAcA,EAASM,SAAWT,EAAEK,OAAOjD,WAG/CtD,QAAQC,IAAI,kBAAmB,EAAK4B,MAAM+E,oBAlD3B,EAsDnBC,kBAAoB,SAACC,GACnB,EAAK5B,UAAS,WACZ,MAAO,CACLmB,SAAUS,OAvDd,EAAKjF,MAAQ,CACXK,KAAMJ,EAAMxB,OAASwB,EAAMxB,OAAO4B,KAAO,GACzCb,SAAUS,EAAMxB,OAASwB,EAAMxB,OAAOe,SAAW,GACjDgB,WAAYP,EAAMxB,OAASwB,EAAMxB,OAAO+B,WAAa,GACrDuE,iBAAkB,GAClBJ,aAAc,GACdH,SAAUvE,EAAMxB,OAASwB,EAAMxB,OAAOoB,UAAY,GAClDc,QAASV,EAAMxB,OAASwB,EAAMxB,OAAOkC,QAAU,GAC/CC,SAAUX,EAAMxB,OAASwB,EAAMxB,OAAOmC,SAAW,IAVlC,E,0CA8DnB,WACE,OACE,qBAAKV,UAAU,YAAf,SACE,uBAAMgF,SAAUzB,KAAKW,aAArB,UACE,sBAAKlE,UAAU,cAAf,UACE,uBAAOiF,QAAQ,OAAf,kBACA,uBACE7G,KAAK,OACLiC,KAAK,OACLkB,MAAOgC,KAAKzD,MAAMK,KAClBsB,SAAU8B,KAAKgB,aACf9F,GAAG,OACHuB,UAAU,oBAGd,sBAAKA,UAAU,cAAf,UACE,uBAAOiF,QAAQ,WAAf,sBACA,yBACExG,GAAG,WACH8C,MAAOgC,KAAKzD,MAAMR,SAClBmC,SAAU8B,KAAKgB,aACflE,KAAK,WACLL,UAAU,eALZ,UAOE,wBAAQuB,MAAM,GAAd,oBACCgC,KAAKxD,MAAMX,UAAUa,KAAI,SAACX,GACzB,OACE,wBAA2BiC,MAAOjC,EAASV,IAA3C,SACGU,EAASe,MADCf,EAASV,cAO9B,sBAAKoB,UAAU,cAAf,UACE,uBAAOiF,QAAQ,aAAf,wBACA,yBACExG,GAAG,aACH8C,MAAOgC,KAAKzD,MAAMQ,WAClBmB,SAAU8B,KAAKgB,aACflE,KAAK,aACLL,UAAU,eALZ,UAOE,wBAAQuB,MAAM,GAAd,oBACCgC,KAAKxD,MAAMP,YAAYS,KAAI,SAACK,GAC3B,OACE,wBAA6BiB,MAAOjB,EAAW1B,IAA/C,SACG0B,EAAWD,MADDC,EAAW1B,cAOhC,sBAAKoB,UAAU,cAAf,UACE,uBAAOiF,QAAQ,YAAf,sBACA,cAAC,IAAD,CACExG,GAAG,YACH4B,KAAK,YACL6E,YAAY,SACZ9C,QAASmB,KAAKzD,MAAM+E,iBACpBpD,SAAU8B,KAAKuB,kBACfK,SAAO,EACP5D,MAAOgC,KAAKzD,MAAMwE,cAGtB,sBAAKtE,UAAU,cAAf,UACE,uBAAOiF,QAAQ,UAAf,qBACA,0BACE1D,MAAOgC,KAAKzD,MAAMW,QAClBgB,SAAU8B,KAAKgB,aACflE,KAAK,UACLL,UAAU,oBAGd,sBAAKA,UAAU,cAAf,UACE,uBAAOiF,QAAQ,WAAf,sBACA,sBAAKjF,UAAU,oCAAf,UACE,uBACE5B,KAAK,QACLoD,QAAiC,SAAxB+B,KAAKzD,MAAMY,SACpBa,MAAM,OACNlB,KAAK,WACLoB,SAAU8B,KAAKgB,aACfvE,UAAU,sBAEZ,uBAAOA,UAAU,mBAAjB,qBAGF,sBAAKA,UAAU,+BAAf,UACE,uBACE5B,KAAK,QACLoD,QAAiC,WAAxB+B,KAAKzD,MAAMY,SACpBL,KAAK,WACLkB,MAAM,SACNE,SAAU8B,KAAKgB,aACfvE,UAAU,qBAEZ,uBAAOA,UAAU,mBAAjB,uBAGF,sBAAKA,UAAU,+BAAf,UACE,uBACE5B,KAAK,QACLoD,QAAiC,QAAxB+B,KAAKzD,MAAMY,SACpBL,KAAK,WACLkB,MAAM,MACNE,SAAU8B,KAAKgB,aACfvE,UAAU,qBAEZ,uBAAOA,UAAU,mBAAjB,uBAGJ,uBAAO5B,KAAK,SAAS4B,UAAU,sBAAsBuB,MAAM,WAC3D,cAAC,IAAD,CAAMZ,GAAG,WAAT,SACE,wBAAQvC,KAAK,SAAS4B,UAAU,kBAAhC,6B,GAjLa6D,IAAMC,WAmMhBsB,cAAWvF,aATF,SAACC,EAAOC,GAC9B,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACLW,UAAWU,EAAMV,UACjBI,YAAaM,EAAMN,YACnBG,UAAWG,EAAMH,UACjBpB,OAAQmD,EAAW5B,EAAM/B,QAASU,MAGZoB,CAAyBoE,ICpLpCpE,qBAjBf,SAAmBE,GAMjB,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,cAAc0D,MAAO,CAAEC,UAAW,QAAhD,wBAGA,cAAC,EAAD,CAAYO,aAXG,SAACG,GACpBpG,QAAQC,IAAI,eAAgBmG,GAE5BtE,EAAMvC,SfgBoB,SAAC6G,EAAUgB,GAEvC,OADApH,QAAQC,IAAI,UAAWmG,GAChB,SAAC7G,GACNL,EACGmI,KAAK,WAAYjB,EAAU,CAC1B3G,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAC1C,IAAMC,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAEhB,GAA2B,eAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,yBACLK,kBAAmB,WAEhB,CACL,IAAM9C,EAAST,EAASE,KAExBR,EAASc,EAAUC,IACnB8G,SehDSO,CAAevB,GADb,kBAAMtE,EAAM8F,QAAQnB,KAAK,2BCa/B7E,qBAhBf,SAAoBE,GAOlB,OACE,sBAAKC,UAAU,iCAAf,UACE,oBAAIA,UAAU,cAAc0D,MAAO,CAAEC,UAAW,QAAhD,yBAGA,cAAC,EAAD,CAAYO,aAXK,SAACG,GACpB,IAAM5F,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9BR,QAAQC,IAAI,cAAemG,GAE3BtE,EAAMvC,ShB+EuB,SAAC6G,EAAU5F,EAAI4G,GAC9C,OAAO,SAAC7H,GACNL,EACG6B,IADH,mBACmBP,GAAM4F,EAAU,CAC/B3G,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAC1CtH,QAAQC,IAAIJ,EAASE,MACrB,IAAMwH,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAEhB,GAA2B,eAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,yBACLK,kBAAmB,YAEhB,GAA2B,cAAvBvD,EAASE,KAAKqC,MAA2D,IAAnCvC,EAASE,KAAK2B,UAAUS,OACvES,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,gCACLK,kBAAmB,WAEhB,CACL,IAAM9C,EAAST,EAASE,KACxBC,QAAQC,IAAI,iBAAkBK,GAC9Bf,EAASqB,EAAaN,IACtB8G,SgBtHSS,CAAkBzB,EAAU5F,GAD1B,kBAAMsB,EAAM8F,QAAQnB,KAAK,yBC+BjCqB,EAAU,SAACC,GACtB,MAAO,CAAE5H,KAAM,WAAYC,QAAS2H,ICpChCC,G,kDACJ,aAAe,IAAD,8BACZ,gBAOF1B,aAAe,SAACJ,GACd,EAAKhB,SAAL,eACGgB,EAAEK,OAAOnE,KAAO8D,EAAEK,OAAOjD,SAVhB,EAad2C,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CACf6B,MAAO,EAAKpG,MAAMoG,MAClBC,SAAU,EAAKrG,MAAMqG,UAKvB,EAAKpG,MAAMvC,SD+BW,SAAC6G,EAAUgB,GACnC,OAAO,SAAC7H,GACNL,EAAMmI,KAAK,eAAgBjB,GAAUxG,MAAK,SAACC,GACrCA,EAASE,KAAKuH,eAAe,UAE/B1E,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKlD,EAASE,KAAK0H,QACvBrE,kBAAmB,KACnB+E,MAAO,OAITzI,aAAa0I,QAAQ,YAAavI,EAASE,KAAKsI,OAChDjB,IACAlI,EACGM,IAAI,iBAAkB,CACrBC,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMkI,EAAOlI,EAASE,KACtBR,EAASuI,EAAQC,IACjBnF,IAAKC,KAAK,CACRG,KAAM,UACNF,MAAO,GACPC,KAAK,wBACLK,kBAAmB,OAErBgE,YC9DYkB,CAAWlC,GAHd,WACf,OAAO,EAAKtE,MAAM8F,QAAQnB,KAAK,oBAlBjC,EAAK5E,MAAQ,CACXoG,MAAO,GACPC,SAAU,IAJA,E,0CAwBd,WACE,OACE,qBAAKnG,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,uBAAMgF,SAAUzB,KAAKW,aAArB,UACE,sBAAKlE,UAAU,OAAf,UACE,uBAAOiF,QAAQ,QAAQjF,UAAU,aAAjC,mBAGA,uBACE5B,KAAK,OACLK,GAAG,QACH4B,KAAK,QACLkB,MAAOgC,KAAKzD,MAAMoG,MAClBzE,SAAU8B,KAAKgB,aACfvE,UAAU,oBAGd,sBAAKA,UAAU,OAAf,UACE,uBAAOiF,QAAQ,WAAWjF,UAAU,aAApC,sBAGA,uBACE5B,KAAK,WACLK,GAAG,WACH4B,KAAK,WACLkB,MAAOgC,KAAKzD,MAAMqG,SAClB1E,SAAU8B,KAAKgB,aACfvE,UAAU,oBAGd,qBAAKA,UAAU,UAAf,SACA,uBAAO5B,KAAK,SAASmD,MAAM,QAAQvB,UAAU,sBAE7C,mBAAGA,UAAU,cAAb,kBACA,mBAAGA,UAAU,cAAb,SACA,cAAC,IAAD,CAAMW,GAAG,kBAAT,oC,GA9DQkD,IAAMC,WAuEXjE,iBAAUoG,ICxEnBO,G,kDACJ,aAAe,IAAD,8BACZ,gBAQFjC,aAAe,SAACJ,GACd,EAAKhB,SAAL,eACGgB,EAAEK,OAAOnE,KAAO8D,EAAEK,OAAOjD,SAXhB,EAcd2C,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CACfoC,SAAU,EAAK3G,MAAM2G,SACrBP,MAAO,EAAKpG,MAAMoG,MAClBC,SAAU,EAAKrG,MAAMqG,UAKvB,EAAKpG,MAAMvC,SF1Bc,SAAC6G,EAAUgB,GACtC,OAAO,WACLlI,EAAMmI,KAAK,kBAAmBjB,GAAUxG,MAAK,SAACC,GAE5C,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAE1C,IAAMC,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,KACnB+E,MAAO,WAEuB,eAAvBtI,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,yBACLK,kBAAmB,QAGrBR,IAAKC,KAAK,CACRG,KAAM,UACNF,MAAO,GACPC,KAAK,wBACLK,kBAAmB,OAErBgE,SELgBqB,CAAcrC,GAHjB,WACf,OAAO,EAAKtE,MAAM8F,QAAQnB,KAAK,qBApBjC,EAAK5E,MAAQ,CACX2G,SAAU,GACVP,MAAO,GACPC,SAAU,IALA,E,0CA0Bd,WACE,OACE,qBAAKnG,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,uBAAMgF,SAAUzB,KAAKW,aAArB,UACE,oBAAIlE,UAAU,cAAd,uBACA,sBAAKA,UAAU,OAAf,UACA,uBAAOiF,QAAQ,WAAWjF,UAAU,aAApC,sBACA,uBACE5B,KAAK,OACLK,GAAG,WACH4B,KAAK,WACLkB,MAAOgC,KAAKzD,MAAM2G,SAClBhF,SAAU8B,KAAKgB,aACfvE,UAAU,oBAGZ,sBAAKA,UAAU,OAAf,UACE,uBAAOiF,QAAQ,QAAQjF,UAAU,aAAjC,mBACA,uBACE5B,KAAK,OACLK,GAAG,QACH4B,KAAK,QACLkB,MAAOgC,KAAKzD,MAAMoG,MAClBzE,SAAU8B,KAAKgB,aACfvE,UAAU,oBAGd,sBAAKA,UAAU,OAAf,UACE,uBAAOiF,QAAQ,WAAWjF,UAAU,aAApC,sBAGA,uBACE5B,KAAK,WACLK,GAAG,WACH4B,KAAK,WACLkB,MAAOgC,KAAKzD,MAAMqG,SAClB1E,SAAU8B,KAAKgB,aACfvE,UAAU,oBAGd,uBAAO5B,KAAK,SAASmD,MAAM,WAAWvB,UAAU,+B,GApErC6D,IAAMC,WA4EdjE,iBAAU2G,ICtEVG,OARf,WACE,OACE,8BACE,yCCQN,IAKe9G,gBALS,SAACC,GACvB,MAAO,CACLkG,KAAMlG,EAAMkG,QAGDnG,EAff,SAAiBE,GAEf,OADA9B,QAAQC,IAAK,UAAU6B,GAErB,gCACE,+BAAKA,EAAMiG,KAAKS,SAAhB,OACA,+BAAK1G,EAAMiG,KAAKE,MAAhB,a,SC2EN,IAKerG,gBALS,SAACC,GACvB,MAAO,CACLV,UAAWU,EAAMV,aAGNS,EAjFf,SAAsBE,GACpB,IAAM6G,EAAe,SAACnI,GACEoI,OAAOC,QAAQ,gBAEnC7I,QAAQC,IAAIO,GACXsB,EAAMvC,Sb8DqB,SAACiB,GACjC,OAAM,SAACjB,GACLL,EAAMuB,OAAN,qBAA2BD,GAAM,CAC/Bf,QAAQ,CACN,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMwB,EAAWxB,EAASE,KAC1BR,EAdwB,SAACiB,GAC7B,MAAO,CACLL,KAAK,kBAAmBC,QAASI,GAYtBsI,CAAezH,EAASV,UavEjBoI,CAAoBvI,MAGT,IAA3BsB,EAAMX,UAAUgB,QAClBL,EAAMvC,SAASmF,KAGjB,IAAM3E,EAAO,CACXiJ,QAAS,CACP,CACEtC,MAAM,QACNuC,MAAM,QAGR,CACEvC,MAAO,OACPuC,MAAO,QAET,CACEvC,MAAO,QACPuC,MAAO,SAET,CACEvC,MAAO,SACPuC,MAAO,UAET,CACEvC,MAAO,UACPuC,MAAO,YAGXC,KAAMpH,EAAMX,UAAUa,KAAI,SAACX,EAASkB,GAAV,MAAiB,CACzC4G,KAAM5G,EAAE,EACRH,KAAMf,EAASe,KACf6F,MAAO5G,EAAS4G,MAChBmB,OAAQ/H,EAAS+H,OACjBC,QACE,gCACE,cAAC,IAAD,CAAMtH,UAAU,2BAA2BW,GAAE,qBAAgBrB,EAASV,KAAtE,kBACA,wBACEoB,UAAU,wBACVY,QAAS,WACPgG,EAAatH,EAASV,MAH1B,4BAYR,OACE,qBAAKoB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,+CAAkBD,EAAMX,UAAUgB,OAAlC,OACA,cAAC,KAAD,CACEpC,KAAMA,EACNuJ,OAAK,EACLC,eAAgB,CAAC,EAAG,GAAI,IACxBC,QAAS,EACTC,YAAa,EACbC,WAAS,EAETC,cAAc,IAGhB,cAAC,IAAD,CAAMjH,GAAG,iBAAiBX,UAAU,yBAApC,mCC9BR,IAOeH,gBAPS,SAACC,EAAOC,GAC9B,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACLa,SAAUH,EAAaW,EAAMV,UAAWX,MAI7BoB,EAlDf,SAAsBE,GACpB,MAAqCA,EAAMT,UAAY,GAA/CV,EAAR,EAAQA,IAAKyB,EAAb,EAAaA,KAAM6F,EAAnB,EAAmBA,MAAOmB,EAA1B,EAA0BA,OAC1B,OACE,qBAAKrH,UAAU,0BAAf,SACGD,EAAMT,SACL,qBAAKU,UAAU,mBAAmB0D,MAAO,CAAE1B,MAAO,SAAlD,SACE,sBAAKhC,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,8BACA,oBAAGA,UAAU,YAAb,cAA2BK,KAC3B,oBAAGL,UAAU,YAAb,cAA2BkG,KAC3B,mBAAGlG,UAAU,YAAb,SAA0BqH,IAC1B,cAAC,IAAD,CAAM1G,GAAE,0BAAqB/B,GAA7B,SACE,wBAAQR,KAAK,SAAS4B,UAAU,6BAAhC,oBAIF,cAAC,IAAD,CAAMW,GAAG,aAAT,SACE,wBAAQvC,KAAK,SAAS4B,UAAU,yBAAhC,yBAON,8BACE,mDCzBJ6H,G,kDACF,WAAY9H,GAAO,IAAD,8BACd,cAAMA,IASVwE,aAAe,SAACJ,GACZ,EAAKhB,SAAL,eACKgB,EAAEK,OAAOnE,KAAQ8D,EAAEK,OAAOjD,SAZjB,EAelB2C,aAAe,SAACC,GACZA,EAAEC,iBACF,IAAMC,EAAW,CACbhE,KAAM,EAAKP,MAAMO,KACjB6F,MAAO,EAAKpG,MAAMoG,MAClBmB,OAAQ,EAAKvH,MAAMuH,QAExB,EAAKtH,MAAMmE,aAAaG,IApBvBpG,QAAQC,IAAI,QAAQ6B,GACpB,EAAKD,MAAQ,CACTO,KAAMN,EAAMT,SAAUS,EAAMT,SAASe,KAAO,GAC5C6F,MAAOnG,EAAMT,SAAUS,EAAMT,SAAS4G,MAAQ,GAC9CmB,OAAQtH,EAAMT,SAAUS,EAAMT,SAAS+H,OAAS,IANtC,E,0CAyBlB,WACI,OACE,qBAAKrH,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACA,uBAAMgF,SAAUzB,KAAKW,aAArB,UACE,uBAAOe,QAAQ,OAAOjF,UAAU,aAAhC,kBACA,uBACE5B,KAAK,OACLK,GAAG,OACH4B,KAAK,OACLkB,MAAOgC,KAAKzD,MAAMO,KAClBoB,SAAU8B,KAAKgB,aACfvE,UAAU,iBAGZ,uBAAOiF,QAAQ,QAAQjF,UAAU,aAAjC,mBACA,uBACE5B,KAAK,OACLK,GAAG,QACH4B,KAAK,QACLkB,MAAOgC,KAAKzD,MAAMoG,MAClBzE,SAAU8B,KAAKgB,aACfvE,UAAU,iBAGZ,uBAAOiF,QAAQ,SAASjF,UAAU,aAAlC,oBACA,uBACE5B,KAAK,OACLK,GAAG,SACH4B,KAAK,SACLkB,MAAOgC,KAAKzD,MAAMuH,OAClB5F,SAAU8B,KAAKgB,aACfvE,UAAU,iBACV,uBACF,uBAAO5B,KAAK,SAASmD,MAAM,SAASvB,UAAU,sC,GA5DjC6D,IAAMC,WA2ElBsB,eAAWvF,aARF,SAACC,EAAOC,GAC9B9B,QAAQC,IAAI,OAAQ6B,GAClB,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACHa,SAAUH,EAAaW,EAAMV,UAAWX,MAItBoB,CAAyBgI,KC7DpChI,sBAdf,SAAqBE,GAMjB,OACI,gCACI,oBAAIC,UAAU,cAAd,2BACA,cAAC,GAAD,CAAckE,aARD,SAACG,GAElBtE,EAAMvC,ShBsBkB,SAAC6G,EAAUgB,GACzC,OAAO,SAAC7H,GACNL,EAAMmI,KAAK,aAAcjB,EAAU,CACjC3G,QAAQ,CACN,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACN,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAC1CtH,QAAQC,IAAIJ,EAASE,MACrB,IAAMwH,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAGlB,GAA0B,eAAvBvD,EAASE,KAAKqC,KACpBQ,IAAKC,KAAK,CACRG,KAAK,QACLF,MAAO,UACPC,KAAK,kCACLK,kBAAmB,WAGlB,CACH,IAAM/B,EAAWxB,EAASE,KAC1BR,EAlCoB,SAAC8B,GAC1B,MAAO,CAAElB,KAAM,eAAgBC,QAASiB,GAiC1BwI,CAAYxI,IACrB+F,SgBtDgB0C,CAAiB1D,GADhB,kBAAKtE,EAAM8F,QAAQnB,KAAK,2BCajC7E,sBAff,SAAsBE,GAOpB,OACE,gCACE,oBAAIC,UAAU,cAAd,8BACA,cAAC,GAAD,CAAckE,aATG,SAACG,GACpB,IAAM5F,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAE9BsB,EAAMvC,SjBkFyB,SAAC6G,EAAU5F,EAAI4G,GAChD,OAAO,SAAC7H,GACNL,EAAM6B,IAAN,qBAAwBP,GAAM4F,EAAU,CACtC3G,QAAQ,CACN,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAC1CtH,QAAQC,IAAIJ,EAASE,MACrB,IAAMwH,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAEhB,GAA2B,eAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,kCACLK,kBAAmB,WAEhB,CACL,IAAM/B,EAAWxB,EAASE,KAC1BR,EAhCsB,SAAC8B,GAC7B,MAAO,CAAClB,KAAK,kBAAmBC,QAASiB,GA+B1B0I,CAAe1I,IACxB+F,SiBhHW4C,CAAoB5D,EAAU5F,GAD5B,kBAAMsB,EAAM8F,QAAQnB,KAAK,2BC2D9C,IAKe7E,gBALS,SAACC,GACvB,MAAO,CACLN,YAAaM,EAAMN,eAGRK,EAlEf,SAAyBE,GACU,IAA7BA,EAAMP,YAAYY,QACpBL,EAAMvC,SAASuF,KAEjB,IAAM6D,EAAe,SAACnI,GAEpB,GADsBoI,OAAOC,QAAQ,gBACpB,CAEf/G,EAAMvC,ShBmByB,SAACiB,EAAI4G,GACxC,OAAO,SAAC7H,GACNL,EACGuB,OADH,uBAC0BD,GAAM,CAC5Bf,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMwC,EAAaxC,EAASE,KAC5BR,EAhBwB,SAACiB,GAC/B,MAAO,CACLL,KAAM,oBACNC,QAASI,GAaIyJ,CAAiB5H,EAAW1B,MACrCyG,QgB9Ba8C,CAAsB1J,GADtB,WAAKsB,EAAM8F,QAAQnB,KAAK,sBAKrC1G,EAAO,CACXiJ,QAAS,CACP,CACEtC,MAAM,QACNuC,MAAM,QAER,CACEvC,MAAO,OACPuC,MAAO,QAET,CACEvC,MAAO,UACPuC,MAAO,YAGXC,KAAMpH,EAAMP,YAAYS,KAAI,SAACR,EAAMe,GAAP,MAAc,CACxC4G,KAAM5G,EAAE,EACRH,KAAMZ,EAAKY,KACXiH,QACE,gCACE,cAAC,IAAD,CAAM3G,GAAE,uBAAkBlB,EAAKb,KAAOoB,UAAU,2BAAhD,oBACA,wBAAQA,UAAU,wBAChBY,QAAS,WACPgG,EAAanH,EAAKb,MAFtB,+BAUR,OACE,qBAAKoB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oDAAuBD,EAAMP,YAAYY,UACzC,cAAC,KAAD,CACEpC,KAAMA,EACNuJ,OAAK,EACLC,eAAgB,CAAC,EAAG,GAAI,IACxBC,QAAS,EACTC,YAAa,EACbC,WAAS,EACTC,cAAc,IAEhB,cAAC,IAAD,CAAMjH,GAAG,mBAAmBX,UAAU,yBAAtC,sCCzDFoI,G,kDACJ,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IAMRwE,aAAe,SAACJ,GACd,EAAKhB,SAAL,eACGgB,EAAEK,OAAOnE,KAAO8D,EAAEK,OAAOjD,SATX,EAcnB2C,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CACfhE,KAAM,EAAKP,MAAMO,MAEnBpC,QAAQC,IAAI,OAAO,EAAK6B,OACxB,EAAKA,MAAMmE,aAAaG,IAlBxBpG,QAAQC,IAAI6B,GACZ,EAAKD,MAAQ,CACXO,KAAMN,EAAMO,WAAaP,EAAMO,WAAWD,KAAO,IAJlC,E,0CAsBnB,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACA,uBAAMgF,SAAUzB,KAAKW,aAArB,UACE,uBAAOe,QAAQ,OAAOjF,UAAU,aAAhC,oBACA,uBACE5B,KAAK,OACLmD,MAAOgC,KAAKzD,MAAMO,KAClB5B,GAAG,OACH4B,KAAK,OACLoB,SAAU8B,KAAKgB,aACfvE,UAAU,iBAEZ,uBACA,uBAAO5B,KAAK,SAASmD,MAAM,SAASvB,UAAU,sC,GAtC1B6D,IAAMC,WAoDrBsB,eAAWvF,aAPH,SAACC,EAAMC,GAC1B,IAAMtB,EAAIsB,EAAMgE,MAAMC,OAAOvF,GAC7B,MAAO,CACH6B,WAAYf,EAAeO,EAAMN,YAAaf,MAI5BoB,CAAyBuI,KCvCpCvI,sBAbf,SAAuBE,GAKrB,OACE,gCACE,oBAAIC,UAAU,cAAd,4BACA,cAAC,GAAD,CAAiBkE,aAPL,SAACG,GAEX,OAAOtE,EAAMvC,SlB+Ca,SAAC6G,EAAUgB,GAC3C,OAAO,SAAC7H,GACNL,EACGmI,KAAK,eAAgBjB,EAAU,CAC9B3G,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAE1C,IAAMC,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAEhB,GAA2B,eAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,+BACLK,kBAAmB,WAEhB,CACL,IAAM5B,EAAO3B,EAASE,KACtBR,EApCmB,SAACiC,GAC5B,MAAO,CACLrB,KAAM,iBACNC,QAASoB,GAiCM4I,CAAc5I,IACvB4F,SkB9EoBiD,CAAmBjE,GADxB,WAAMtE,EAAM8F,QAAQnB,KAAK,6BCgClD,IAOe7E,gBAPS,SAACC,EAAOC,GAC5B9B,QAAQC,IAAI6B,GACZ,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACL6B,WAAYf,EAAeO,EAAMN,YAAaf,MAGrCoB,EAzCf,SAAyBE,GACrB,MAAoBA,EAAMO,YAAc,GACxC,OADA,EAAO1B,IAAP,EAAYyB,KAEV,qBAAKL,UAAU,0BAAf,SACGD,EAAMO,WACL,qBAAKN,UAAU,mBAAmB0D,MAAO,CAAE1B,MAAO,SAAlD,SACE,sBAAKhC,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,mCACA,mBAAGA,UAAU,YAAb,SAA0BD,EAAMO,WAAWD,OAC3C,cAAC,IAAD,CAAMM,GAAE,4BAAuBZ,EAAMO,WAAW1B,KAAhD,SACE,wBAAQR,KAAK,SAAS4B,UAAU,6BAAhC,oBAIF,cAAC,IAAD,CAAMW,GAAG,eAAT,SACE,wBAAQvC,KAAK,SAAS4B,UAAU,yBAAhC,yBAON,8BACE,kDCPGH,sBAhBf,SAA0BE,GAMtB,OACI,8BACI,6BACA,cAAC,GAAD,CAAiBmE,aARV,SAACG,GACZ,IAAM5F,EAAIsB,EAAMgE,MAAMC,OAAOvF,GAE7BsB,EAAMvC,SpByFuB,SAAC6G,EAAU5F,EAAI4G,GAClD,OAAO,SAAC7H,GACNL,EACG6B,IADH,uBACuBP,GAAM4F,EAAU,CACnC3G,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAE1C,IAAMC,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAEhB,GAA2B,eAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,+BACLK,kBAAmB,WAEhB,CACL,IAAM5B,EAAO3B,EAASE,KACtBR,EApCsB,SAACiC,GAC/B,MAAO,CACLrB,KAAM,oBACNC,QAASoB,GAiCM8I,CAAiB9I,IAC1B4F,IACA7H,EDeD,CACLY,KAAM,6BACNC,QCjBwCoB,SoBzHrB+I,CAAsBnE,EAAU5F,GAD9B,WAAMsB,EAAM8F,QAAQnB,KAAK,8BC4FlD,IAMe7E,gBANS,SAACC,GACvB,MAAO,CACLH,UAAWG,EAAMH,UACjBH,YAAaM,EAAMN,eAGRK,EAhGf,SAAuBE,GACU,IAA3BA,EAAMJ,UAAUS,SAClBL,EAAMvC,SAASqF,KACf9C,EAAMvC,SAASuF,MAGjB,IAAM6D,EAAe,SAACnI,GAEpB,GADsBoI,OAAOC,QAAQ,gBAClB,CAIjB/G,EAAMvC,StBUuB,SAACiB,EAAI4G,GACtC,OAAO,SAAC7H,GACNL,EACGuB,OADH,qBACwBD,GAAM,CAC1Bf,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMwG,EAAWxG,EAASE,KAE1BR,EAjBsB,SAACiB,GAC7B,MAAO,CACLL,KAAM,kBACNC,QAASI,GAcIgK,CAAenE,EAAS1F,MACjCyG,QsBtBaqD,CAAoBjK,GAHlB,WACfsB,EAAM8F,QAAQnB,KAAK,oBASnB1G,EAAO,CACXiJ,QAAS,CACP,CACEtC,MAAO,QACPuC,MAAO,QAET,CACEvC,MAAO,OACPuC,MAAO,QAET,CACEvC,MAAO,QACPuC,MAAO,SAET,CACEvC,MAAO,SACPuC,MAAO,UAET,CACEvC,MAAO,aACPuC,MAAO,cAET,CACEvC,MAAO,UACPuC,MAAO,YAGXC,KAAMpH,EAAMJ,UAAUM,KAAI,SAACL,EAAKY,GAAN,MA/BJ/B,EA+BI,MAAa,CACrC2I,KAAM5G,EAAI,EACVH,KAAMT,EAAIS,KACV6F,MAAOtG,EAAIsG,MACXmB,OAAQzH,EAAIyH,OACZ/G,WAAU,QApCU7B,EAoCOmB,EAAIU,WAArB,EAlCLP,EAAMP,YAAYH,MAAK,SAACI,GAAD,OAAUA,EAAKb,MAAQH,YAkCzC,aAAE,EAAgC4B,KAC5CiH,QACE,gCACE,cAAC,IAAD,CAAM3G,GAAE,qBAAgBf,EAAIhB,KAC1BoB,UAAU,2BADZ,kBAKA,wBACEY,QAAS,WACPgG,EAAahH,EAAIhB,MAEnBoB,UAAU,wBAJZ,4BAaR,OACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,kDAAqBD,EAAMJ,UAAUS,UACrC,cAAC,KAAD,CACEpC,KAAMA,EACNuJ,OAAK,EACLC,eAAgB,CAAC,EAAG,GAAI,IACxBC,QAAS,EACTC,YAAa,EACbC,WAAS,EACTC,cAAc,IAEhB,cAAC,IAAD,CAAMjH,GAAG,iBAAiBX,UAAU,yBAApC,mC,kDCzFF2I,G,kDACJ,WAAY5I,GAAQ,IAAD,8BACjB,cAAMA,IASRwE,aAAe,SAACJ,GACd,EAAKhB,SAAL,eACGgB,EAAEK,OAAOnE,KAAO8D,EAAEK,OAAOjD,SAZX,EAgBnB2C,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CACfhE,KAAM,EAAKP,MAAMO,KACjB6F,MAAM,EAAKpG,MAAMoG,MACjBmB,OAAQ,EAAKvH,MAAMuH,OACnB/G,WAAY,EAAKR,MAAMQ,YAEzB,EAAKP,MAAMuE,WAAaD,EAAS5F,GAAK,EAAKsB,MAAMuE,SAAS1F,KAC1DX,QAAQC,IAAI,MAAO,EAAK6B,OACxB,EAAKA,MAAMmE,aAAaG,IAxBxBpG,QAAQC,IAAI6B,GACZ,EAAKD,MAAQ,CACXO,KAAMN,EAAMuE,SAAWvE,EAAMuE,SAASjE,KAAO,GAC7C6F,MAAOnG,EAAMuE,SAAWvE,EAAMuE,SAAS4B,MAAO,GAC9CmB,OAAQtH,EAAMuE,SAAWvE,EAAMuE,SAAS+C,OAAQ,GAChD/G,WAAYP,EAAMuE,SAAWvE,EAAMuE,SAAShE,WAAY,IAPzC,E,0CA4BnB,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,eAAC,KAAD,CAAMgF,SAAUzB,KAAKW,aAArB,UACE,eAAC0E,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAO5D,QAAQ,OAAOjF,UAAU,aAAhC,kBACE,cAAC8I,GAAA,EAAD,CACE1K,KAAK,OACLK,GAAG,OACH8C,MAAOgC,KAAKzD,MAAMO,KAClBoB,SAAU8B,KAAKgB,aACflE,KAAK,SACL,0BAGN,eAACuI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAO5D,QAAQ,QAAQjF,UAAU,aAAjC,mBACA,cAAC8I,GAAA,EAAD,CACE1K,KAAK,OACLK,GAAG,QACH8C,MAAOgC,KAAKzD,MAAMoG,MAClBzE,SAAU8B,KAAKgB,aACflE,KAAK,UACL,0BAGJ,eAACuI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAO5D,QAAQ,SAASjF,UAAU,aAAlC,oBACA,cAAC8I,GAAA,EAAD,CACE1K,KAAK,OACLK,GAAG,SACH8C,MAAOgC,KAAKzD,MAAMuH,OAClB5F,SAAU8B,KAAKgB,aACflE,KAAK,WACL,0BAGJ,eAACuI,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAO5D,QAAQ,aAAajF,UAAU,aAAtC,wBACA,eAAC8I,GAAA,EAAD,CACE1K,KAAK,SACLK,GAAG,aACH8C,MAAOgC,KAAKzD,MAAMQ,WAClBmB,SAAU8B,KAAKgB,aACflE,KAAK,aALP,UAOE,wBAAQkB,MAAM,GAAd,oBACCgC,KAAKxD,MAAMP,YAAYS,KAAI,SAACK,GAC3B,OACE,wBAA6BiB,MAAOjB,EAAW1B,IAA/C,SACG0B,EAAWD,MADDC,EAAW1B,WAM9B,0BAEF,cAACmK,GAAA,EAAD,CAAQ3K,KAAK,SAASmD,MAAM,SAASyH,MAAM,UAA3C,+B,GAvFgBnF,IAAMC,WAwGnBsB,eAAWvF,aARF,SAACC,EAAOC,GAC9B,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACL6F,SAAU5E,EAAaI,EAAMH,UAAWlB,GACxCe,YAAaM,EAAMN,eAIGK,CAAyB8I,KC1FpC9I,sBAff,SAAqBE,GAOnB,OACE,gCACE,oBAAIC,UAAU,cAAd,0BACA,cAAC,GAAD,CAAekE,aATJ,SAACG,GAId,OAAOtE,EAAMvC,SxB6Ce,SAAC6G,EAAUgB,GACzC,OAAO,SAAC7H,GACNL,EACGmI,KAAK,aAAcjB,EAAU,CAC5B3G,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAE1C,IAAMC,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAEhB,GAA2B,eAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,kCACLK,kBAAmB,WAEhB,CACL,IAAMzB,EAAM9B,EAASE,KAErBR,EArCiB,SAACoC,GAC1B,MAAO,CACLxB,KAAM,eACNC,QAASuB,GAkCMqJ,CAAYrJ,IACrByF,SwB7EgB6D,CAAiB7E,GAHtB,WACftE,EAAM8F,QAAQnB,KAAK,2BCiCzB,IAOe7E,gBAPS,SAACC,EAAOC,GAC9B9B,QAAQC,IAAI6B,GACZ,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACL6F,SAAU5E,EAAaI,EAAMH,UAAWlB,MAG7BoB,EA3Cf,SAAuBE,GACrB,MAAqCA,EAAMuE,UAAY,GAA/C1F,EAAR,EAAQA,IAAKyB,EAAb,EAAaA,KAAM6F,EAAnB,EAAmBA,MAAOmB,EAA1B,EAA0BA,OAC1B,OACE,qBAAKrH,UAAU,0BAAf,SACGD,EAAMuE,SACL,qBAAKtE,UAAU,mBAAmB0D,MAAO,CAAE1B,MAAO,SAAlD,SACE,sBAAKhC,UAAU,YAAf,UACE,kDACA,oBAAGA,UAAU,YAAb,kBAA+BK,KAC/B,oBAAGL,UAAU,YAAb,mBAAgCkG,KAChC,oBAAGlG,UAAU,YAAb,oBAAiCqH,KACjC,cAAC,IAAD,CAAM1G,GAAE,0BAAqB/B,GAA7B,SACE,wBAAQR,KAAK,SAAS4B,UAAU,6BAAhC,oBAIF,cAAC,IAAD,CAAMW,GAAG,aAAT,SACE,wBAAQvC,KAAK,SAAS4B,UAAU,yBAAhC,yBAON,8BACE,iDCTV,IAOeH,gBAPS,SAACC,EAAOC,GAC9B,IAAMtB,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAC9B,MAAO,CACL6F,SAAUxE,EAAMH,UAAUN,MAAK,SAACiF,GAAD,OAAcA,EAAS1F,MAAQH,QAInDoB,EAvBf,SAAwBE,GAQtB,OACE,gCACE,oBAAIC,UAAU,cAAd,4BACA,cAAC,GAAD,CAAekE,aAVJ,SAACI,GACd,IAAM7F,EAAKsB,EAAMgE,MAAMC,OAAOvF,GAI9BsB,EAAMvC,S1BwFyB,SAAC8G,EAAU7F,EAAI4G,GAChD,OAAO,SAAC7H,GACNL,EACG6B,IADH,qBACqBP,GAAM6F,EAAU,CACjC5G,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,GAAIA,EAASE,KAAKuH,eAAe,UAAW,CAE1C,IAAMC,EAAgB,GACtB,IAAK,IAAMC,KAAO3H,EAASE,KAAK0H,OAC9BF,EAAcd,KAAK5G,EAASE,KAAK0H,OAAOD,GAAKhF,SAE/CI,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKwE,EAAcG,KAAK,OAC5BtE,kBAAmB,YAEhB,GAA2B,cAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,GAAD,OAAKlD,EAASE,KAAKyC,SACvBY,kBAAmB,YAEhB,GAA2B,eAAvBvD,EAASE,KAAKqC,KACvBQ,IAAKC,KAAK,CACRG,KAAM,QACNF,MAAO,UACPC,KAAK,kCACLK,kBAAmB,WAEhB,CACL,IAAMzB,EAAM9B,EAASE,KACrBC,QAAQC,IAAI,mBAAoB0B,GAChCpC,EA3CD,CACLY,KAAM,kBACNC,QAyC8BuB,IACxByF,S0B/HS8D,CAAoB7E,EAAS7F,GAH3B,WACfsB,EAAM8F,QAAQnB,KAAK,2BCmIzB,IAMe7E,gBANS,SAACC,GACvB,MAAO,CACLkG,KAAMlG,EAAMkG,QAIDnG,EA9Gf,SAAaE,GACX9B,QAAQC,IAAI,MAAO6B,GACnB,IAAMqJ,EAAe,WACnBrJ,EAAMvC,UpB+DD,SAACA,GACNL,EACGuB,OAAO,gBAAiB,CACvBhB,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GAEDA,EAASE,KAAKqL,SAChB1L,aAAa2L,WAAW,aACxB9L,EAfD,CAAEY,KAAM,gBAgBPyC,IAAKC,KAAK,CACRG,KAAM,UACNF,MAAO,GACPC,KAAK,0BACLK,kBAAmB,OAErBwF,OAAO0C,SAASC,KAAO,wBoB/E/B,OACE,cAAC,IAAD,UACE,sBAAKxJ,UAAU,YAAf,UACE,cAACyJ,EAAA,EAAD,CAAQT,MAAM,QAAQU,OAAK,EAACC,OAAO,KAAK3J,UAAU,OAAlD,SACE,eAAC4J,EAAA,EAAD,CAAK5J,UAAU,UAAU6J,QAAM,EAA/B,UACE,cAACC,EAAA,EAAD,4BACA,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,QAA3C,oBAKkC,IAAnCqJ,OAAOC,KAAKlK,EAAMiG,MAAM5F,OACvB,eAAC,IAAM8J,SAAP,WACE,cAACH,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,eAA3C,qBAIF,cAACoJ,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,kBAA3C,2BAMJ,eAAC,IAAMuJ,SAAP,WACE,cAACH,EAAA,EAAD,UACE,eAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,aAA3C,UACG,IADH,YAEY,SAGd,cAACoJ,EAAA,EAAD,UACE,eAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,iBAA3C,UACG,IADH,UAEU,SAGZ,cAACoJ,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,eAA3C,2BAIF,cAACoJ,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,aAA3C,yBAIF,cAACoJ,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/J,UAAU,wBAAwBW,GAAG,WAA3C,uBAEF,cAACoJ,EAAA,EAAD,UACE,cAAC,IAAD,CACE/J,UAAU,wBACVW,GAAG,IACHC,QAAS,WACPwI,KAJJ,8BAcV,qBAAKpJ,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmK,KAAK,QAAQC,UAAWzD,KAC/B,cAAC,IAAD,CAAOwD,KAAK,eAAeC,UAAWnE,KACtC,cAAC,IAAD,CAAOkE,KAAK,kBAAkBC,UAAW5D,KACzC,cAAC,IAAD,CAAO2D,KAAK,iBAAiBC,UAAWC,KAExC,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWE,GAAcC,OAAO,IACzD,cAAC,IAAD,CAAOJ,KAAK,iBAAiBC,UAAWI,KACxC,cAAC,IAAD,CAAOL,KAAK,sBAAsBC,UAAWK,KAC7C,cAAC,IAAD,CAAON,KAAK,iBAAiBC,UAAWM,KAExC,cAAC,IAAD,CAAOP,KAAK,eAAcC,UAAWO,GAAiBJ,OAAO,IAC7D,cAAC,IAAD,CAAOJ,KAAK,mBAAmBC,UAAWQ,KAC1C,cAAC,IAAD,CAAOT,KAAK,wBAAyBC,UAAWS,GAAiBN,OAAO,IACxE,cAAC,IAAD,CAAOJ,KAAK,mBAAmBC,UAAWU,GAAiBP,OAAO,IAElE,cAAC,IAAD,CAAOJ,KAAK,aAAaC,UAAWW,GAAeR,OAAO,IAC1D,cAAC,IAAD,CAAOJ,KAAK,iBAAiBC,UAAWY,KACxC,cAAC,IAAD,CAAOb,KAAK,sBAAsBC,UAAWa,KAC7C,cAAC,IAAD,CAAOd,KAAK,iBAAiBC,UAAWc,KAExC,cAAC,IAAD,CAAOf,KAAK,WAAWC,UAAWnH,EAAYsH,OAAO,IACrD,cAAC,IAAD,CAAOJ,KAAK,eAAeC,UAAWe,IACtC,cAAC,IAAD,CAAOhB,KAAK,oBAAoBC,UAAWgB,IAC3C,cAAC,IAAD,CAAOjB,KAAK,eAAeC,UAAWiB,iB,2BCrI5CC,GAAe,GAeNC,GAdK,WAAgC,IAA/BzL,EAA8B,uDAAxBwL,GAAcE,EAAU,uCAC/C,OAAOA,EAAOpN,MACV,IAAK,WACD,OAAO,gBAAKoN,EAAOnN,SAEvB,IAAK,cACD,OAAOiN,GAEX,QACI,OAAO,gBAAIxL,K,SCVjBwL,GAAe,GA6BNG,GA3BU,WAAmC,IAAlC3L,EAAiC,uDAAzBwL,GAAcE,EAAW,uCACzD,OAAQA,EAAOpN,MACb,IAAK,eACH,MAAM,GAAN,oBAAW0B,GAAX,CAAkB0L,EAAOnN,UAE3B,IAAK,eACH,OAAO,aAAImN,EAAOnN,SAEpB,IAAK,kBACH,OAAOyB,EAAM8B,QAAO,SAAAtC,GAAQ,OAAIA,EAASV,MAAQ4M,EAAOnN,WAE1D,IAAK,kBACH,OAAOyB,EAAMG,KAAI,SAAAX,GACf,OAAGA,EAASV,MAAQ4M,EAAOnN,QAAQO,IAC1B,6BAAIU,GAAakM,EAAOnN,SAGxB,gBAAIiB,MAIjB,QACE,OAAO,aAAIQ,KCxBXwL,GAAe,GA6BNI,GA3BY,WAAgC,IAA/B5L,EAA8B,uDAAxBwL,GAAcE,EAAU,uCACtD,OAAOA,EAAOpN,MACV,IAAK,kBACD,OAAO,aAAIoN,EAAOnN,SAEtB,IAAK,oBACD,OAAOyB,EAAM8B,QAAO,SAAAnC,GAAI,OAAIA,EAAKb,MAAQ4M,EAAOnN,WAEpD,IAAK,iBACD,MAAM,GAAN,oBAAWyB,GAAX,CAAkB0L,EAAOnN,UAE7B,IAAK,oBACD,OAAOyB,EAAMG,KAAI,SAAAR,GACb,OAAGA,EAAKb,MAAQ4M,EAAOnN,QAAQO,IACpB,6BAAIa,GAAS+L,EAAOnN,SAGpB,gBAAIoB,MAIvB,QACI,OAAO,aAAIK,KCxBjBwL,GAAe,GAwCNK,GAtCU,WAAiC,IAAhC7L,EAA+B,uDAAvBwL,GAAcE,EAAS,uCACrD,OAAQA,EAAOpN,MACb,IAAK,gBACH,OAAO,aAAIoN,EAAOnN,SAGpB,IAAK,kBACH,OAAOyB,EAAM8B,QAAO,SAAChC,GAAD,OAASA,EAAIhB,MAAQ4M,EAAOnN,WAElD,IAAK,eACH,MAAM,GAAN,oBAAWyB,GAAX,CAAkB0L,EAAOnN,UAE3B,IAAK,kBACH,OAAOyB,EAAMG,KAAI,SAACL,GAChB,OAAIA,EAAIhB,MAAQ4M,EAAOnN,QAAQO,IACtB,6BAAKgB,GAAQ4L,EAAOnN,SAEpB,gBAAKuB,MAelB,QACE,OAAO,aAAIE,KCnCb8L,GAAsB,GAmCbC,GAlCQ,WAA0C,IAAzC/L,EAAwC,uDAAhC8L,GAAqBJ,EAAW,uCAC9D,OAAQA,EAAOpN,MACb,IAAK,cACH,OAAO,aAAIoN,EAAOnN,SAEpB,IAAK,gBACH,OAAOyB,EAAMG,KAAI,SAAC1B,GAChB,OAAIA,EAAOK,KAAO4M,EAAOnN,QAAQO,IACxB4M,EAAOnN,QAEPE,KAIb,IAAK,aACH,MAAM,GAAN,oBAAWuB,GAAX,CAAkB0L,EAAOnN,UAE3B,IAAK,gBACH,OAAOyB,EAAM8B,QAAO,SAACrD,GAAD,OAAYA,EAAOK,KAAO4M,EAAOnN,WAEvD,IAAK,gBACH,OAAOyB,EAAMG,KAAI,SAAC1B,GAChB,OAAIA,EAAOK,KAAO4M,EAAOnN,QAAQO,IACxB,6BAAKL,GAAWiN,EAAOnN,SAEvB,gBAAKE,MAIlB,QACE,OAAO,aAAIuB,KCZFgM,GAXQ,WAQnB,OAPcC,aAAYC,aAAgB,CACtChG,KAAMuF,GACNnM,UAAWqM,GACXjM,YAAakM,GACb/L,UAAWgM,GACX5N,QAAS8N,KACTI,aAAgBC,QCHlBC,I,OAAQL,MAGdK,GAAMC,WAAU,WACdnO,QAAQC,IAAIiO,GAAME,eAIjB1O,aAAaC,QAAQ,eACtBuO,GAAM3O,U3BwBC,SAACA,GACNL,EACGM,IAAI,iBAAkB,CACrBC,QAAS,CACP,SAAUC,aAAaC,QAAQ,gBAGlCC,MAAK,SAACC,GACL,IAAMkI,EAAOlI,EAASE,KACtBR,EAASuI,EAAQC,U2BhCvBmG,GAAM3O,SAASmF,KACfwJ,GAAM3O,SAASuF,KACfoJ,GAAM3O,SAASqF,KACfsJ,GAAM3O,SAASD,MAGjB,IAAM+O,GACJ,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,GAAD,MAIJI,IAASC,OAAOF,GAAKG,SAASC,eAAe,W","file":"static/js/main.f1d7d6ca.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst axios = Axios.create({\r\n  //baseURL: 'http://dct-ticket-master.herokuapp.com',\r\n  //baseURL:'http://localhost:3010'\r\n  baseURL: '/',\r\n});\r\n\r\nexport default axios;\r\n","import axios from '../config/axios';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const startSetTickets = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get('/tickets', {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const tickets = response.data;\r\n        console.log('set tickets', tickets);\r\n        dispatch(setTickets(tickets));\r\n      });\r\n  };\r\n};\r\nexport const setTickets = (tickets) => {\r\n  return {\r\n    type: 'SET_TICKETS',\r\n    payload: tickets,\r\n  };\r\n};\r\n//async\r\nexport const startAddTicket = (formData, redirect) => {\r\n  console.log('formdta', formData);\r\n  return (dispatch) => {\r\n    axios\r\n      .post('/tickets', formData, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.hasOwnProperty('errors')) {\r\n          const errorMessages = [];\r\n          for (const key in response.data.errors) {\r\n            errorMessages.push(response.data.errors[key].message);\r\n          }\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `${errorMessages.join(', ')}`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'MongoError') {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `code is already exists`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else {\r\n          const ticket = response.data;\r\n          // console.log(\"add ticket\", emp)\r\n          dispatch(addTicket(ticket));\r\n          redirect();\r\n        }\r\n      });\r\n  };\r\n};\r\nexport const addTicket = (ticket) => {\r\n  return {\r\n    type: 'ADD_TICKET',\r\n    payload: ticket,\r\n  };\r\n};\r\n\r\nexport const removeTicket = (id) => {\r\n  return {\r\n    type: 'REMOVE_TICKET',\r\n    payload: id,\r\n  };\r\n};\r\nexport const startRemoveTicket = (id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(`/tickets/${id}`, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const ticket = response.data;\r\n        dispatch(removeTicket(ticket._id));\r\n      });\r\n  };\r\n};\r\nexport const startUpdateTicket = (formData, id, redirect) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(`/tickets/${id}`, formData, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.hasOwnProperty('errors')) {\r\n          console.log(response.data);\r\n          const errorMessages = [];\r\n          for (const key in response.data.errors) {\r\n            errorMessages.push(response.data.errors[key].message);\r\n          }\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `${errorMessages.join(', ')}`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'MongoError') {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `code is already exists`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'CastError' || response.data.employees.length === 0) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `kindly fill the required data`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else {\r\n          const ticket = response.data;\r\n          console.log('updated ticket', ticket);\r\n          dispatch(updateTicket(ticket));\r\n          redirect();\r\n        }\r\n      } );\r\n    \r\n  };\r\n};\r\n\r\nexport const updateTicket = (ticket) => {\r\n  return {\r\n    type: 'UPDATE_TICKET',\r\n    payload: ticket,\r\n  };\r\n};\r\n\r\nexport const startUpdateStatus = (obj) => {\r\n  console.log('obj', obj);\r\n  return (dispatch) => {\r\n    axios\r\n      .put(`/tickets/${obj.id}`, obj.status, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log('check response', response.data);\r\n        dispatch(updateStatus(response.data));\r\n      });\r\n  };\r\n};\r\nexport const updateStatus = (ticket) => {\r\n  return { type: 'UPDATE_STATUS', payload: ticket };\r\n};\r\n","export const findCustomer = (customers, id)=>{\r\n    return customers.find(customer => customer._id === id)\r\n}","export const findDepartment =(departments, id)=>{\r\n    return departments.find(dept => dept._id === id )\r\n}","export const findEmployee = (employees, id) => {\r\n  return employees.find((emp) => emp._id === id);\r\n};\r\n","import React from 'react';\r\nimport {\r\n  startRemoveTicket,\r\n  startSetTickets,\r\n  startUpdateStatus,\r\n} from '../../actions/tickets1Action';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { findCustomer } from '../../selectors/findCustomer';\r\nimport { findDepartment } from '../../selectors/findDepartment';\r\nimport { findEmployee } from '../../selectors/findEmployee';\r\n\r\nfunction PendingTicket(props) {\r\n  const handleChange = (id) => {\r\n    const status = {\r\n      isResolved: true,\r\n    };\r\n    props.dispatch(startUpdateStatus({ id, status }));\r\n  };\r\n  const handleRemove = (id) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\r\n        props.dispatch(startRemoveTicket(id));\r\n      }\r\n    });\r\n  }; ///Remove completed\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Code No</th>\r\n            <th>Customer</th>\r\n            <th>Department</th>\r\n            <th>Employees</th>\r\n            <th>Message</th>\r\n            <th>Priority</th>\r\n            <th>Actions</th>\r\n            <th>Remove</th>\r\n            <th>complete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.tickets.map((ticket) => {\r\n            if (!ticket.isResolved) {\r\n              return (\r\n                <tr key={ticket._id}>\r\n                  <td>{ticket.code}</td>\r\n                  {props.customers.length !== 0 && (\r\n                    <td>\r\n                      {findCustomer(props.customers, ticket.customer)?.name}\r\n                    </td>\r\n                  )}\r\n                  {props.departments.length !== 0 && (\r\n                    <td>\r\n                      {\r\n                        findDepartment(props.departments, ticket.department)\r\n                          ?.name\r\n                      }\r\n                    </td>\r\n                  )}\r\n\r\n                  {props.employees.length !== 0 && (\r\n                    <td>\r\n                      {ticket.employees.length > 0 &&\r\n                        ticket.employees.map((emp1, i) => {\r\n                          return (\r\n                            <span key={i}>\r\n                              {' '}\r\n                              {findEmployee(props.employees, emp1)?.name}{' '}\r\n                            </span>\r\n                          );\r\n                        })}\r\n                    </td>\r\n                  )}\r\n                  <td>{ticket.message}</td>\r\n                  <td>{ticket.priority}</td>\r\n                  <td>\r\n                    <Link to={`/tickets/${ticket._id}`}>\r\n                      <button className=\"btn btn-secondary btn-sm\">Show</button>\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={() => {\r\n                        handleRemove(ticket._id);\r\n                      }}\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={ticket.isResolved}\r\n                      onChange={() => {\r\n                        handleChange(ticket._id);\r\n                      }}\r\n                      name=\"isResolved\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customers: state.customers,\r\n    departments: state.departments,\r\n    employees: state.employees,\r\n    tickets: state.tickets,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(PendingTicket);\r\n","import React from 'react';\r\nimport { startRemoveTicket, startUpdateStatus } from '../../actions/tickets1Action';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { findEmployee } from '../../selectors/findEmployee';\r\nimport { findDepartment } from '../../selectors/findDepartment';\r\nimport { findCustomer } from '../../selectors/findCustomer';\r\n\r\nfunction CompletedTicket(props) {\r\n  const handleChange = (id) => {\r\n    const status = {\r\n      isResolved: false,\r\n    };\r\n    props.dispatch(startUpdateStatus({ id, status }));\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\r\n        props.dispatch(startRemoveTicket(id));\r\n      }\r\n    });\r\n  }; //\r\n \r\n    return (\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Code No</th>\r\n              <th>Customer</th>\r\n              <th>Department</th>\r\n              <th>Employees</th>\r\n              <th>Message</th>\r\n              <th>Priority</th>\r\n              <th>Actions</th>\r\n              <th>Remove</th>\r\n              <th>Incomplete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.tickets.map((ticket) => {\r\n              if (ticket.isResolved) {\r\n                return (\r\n                  <tr key={ticket._id}>\r\n                    <td>{ticket.code}</td>\r\n                    {props.customers.length !== 0 && (\r\n                      <td>\r\n                        {\r\n                         findCustomer(props.customers, ticket.customer)?.name\r\n                        }\r\n                      </td>\r\n                    )}\r\n                    {props.departments.length !== 0 && (\r\n                      <td>\r\n                        {\r\n                          findDepartment(props.departments, ticket.department)?.name\r\n                        }\r\n                      </td>\r\n                    )}\r\n\r\n                    {props.employees.length !== 0 && (\r\n                      <td>\r\n                        {ticket.employees.length > 0 &&\r\n                          ticket.employees.map((emp1, i) => {\r\n                            return (\r\n                              <span key={i}>\r\n                                {findEmployee(props.employees, emp1)?.name}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                      </td>\r\n                    )}\r\n\r\n                    <td>{ticket.message}</td>\r\n                    <td>{ticket.priority}</td>\r\n                    <td>\r\n                      <Link to={`/tickets/${ticket._id}`}>\r\n                        <button className=\"btn btn-secondary btn-sm\">Show</button>\r\n                      </Link>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-danger btn-sm\"\r\n                        onClick={() => {\r\n                          handleRemove(ticket._id);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={ticket.isResolved}\r\n                        onChange={() => {\r\n                          handleChange(ticket._id);\r\n                        }}\r\n                        name=\"isResolved\"\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customers: state.customers,\r\n    departments: state.departments,\r\n    employees: state.employees,\r\n    tickets: state.tickets,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(CompletedTicket);\r\n","export const findCustomer = (customers, id) => {\r\n  return customers.find((customer) => customer._id == id);\r\n};\r\nexport const findDepartment = (departments, id) => {\r\n  return departments.find((department) => department._id == id);\r\n};\r\nexport const findTicket = (tickets, id) => {\r\n  return tickets.find((ticket) => ticket._id == id);\r\n};\r\nexport const pendingTicket = (tickets) => {\r\n  return tickets.filter((ticket) => !ticket.isResolved);\r\n};\r\n","import React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\nimport { connect } from 'react-redux';\r\nimport { findDepartment, pendingTicket } from '../../selectors/ticketSelector';\r\n\r\nfunction PieChart(props) {\r\n  console.log('pending', props.pendingTicket);\r\n  const high = props.pendingTicket.filter(\r\n    (ticket) => ticket.priority === 'high'\r\n  ).length;\r\n  const medium = props.pendingTicket.filter(\r\n    (ticket) => ticket.priority === 'medium'\r\n  ).length;\r\n  const low = props.pendingTicket.filter(\r\n    (ticket) => ticket.priority === 'low'\r\n  ).length;\r\n console.log('length', high, medium, low);\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={'500px'}\r\n        height={'300px'}\r\n        chartType=\"PieChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Task', 'Hours per Day'],\r\n          ['High', high],\r\n          ['Medium', medium],\r\n          ['Low', low],\r\n        ]}\r\n        options={{\r\n          title: 'Ticket Priority',\r\n          is3D: true,\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ticket: state.tickets,\r\n    pendingTicket: pendingTicket(state.tickets),\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(PieChart);\r\n","import React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\nimport { connect } from 'react-redux';\r\nimport { findDepartment } from '../../selectors/findDepartment';\r\nimport { pendingTicket } from '../../selectors/ticketSelector';\r\n\r\nfunction BarChart(props) {\r\n  //console.log('pending', props.pendingTicket);\r\n  const it = props.pendingTicket.filter(\r\n    (ticket) => findDepartment(props.departments, ticket.department)?.name === 'IT'\r\n  ).length;\r\n  const finance = props.pendingTicket.filter(\r\n    (ticket) => findDepartment(props.departments, ticket.department)?.name === 'Finance'\r\n  ).length;\r\n  const maths = props.pendingTicket.filter(\r\n    (ticket) => findDepartment(props.departments, ticket.department)?.name === 'Maths'\r\n  ).length;\r\n  console.log('length', it, finance, maths);\r\n  return (\r\n    <div>\r\n      <Chart\r\n        width={'500px'}\r\n        height={'300px'}\r\n        chartType=\"Bar\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          ['Departments', 'Tickets'],\r\n          ['IT', it],\r\n          ['Finance', finance],\r\n          ['Maths', maths],\r\n        ]}\r\n        options={{\r\n          chart: {\r\n            title: 'Tickets By Department',\r\n          },\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ticket: state.tickets,\r\n    pendingTicket: pendingTicket(state.tickets),\r\n    departments: state.departments\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(BarChart);\r\n","import axios from '../config/axios';\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const setCustomer = (customer) => {\r\n  return {\r\n    type: 'SET_CUSTOMER',\r\n    payload: customer,\r\n  };\r\n};\r\n\r\n export const startSetCustomer = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get('/customers', {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const customer = response.data;\r\n        // console.log('cust', customer);\r\n        dispatch(setCustomer(customer));\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const addCustomer = (customer)=>{\r\n  return { type: 'ADD_CUSTOMER', payload: customer}\r\n}\r\nexport const startAddCustomer = (formData, redirect) =>{\r\n  return (dispatch) =>{\r\n    axios.post('/customers', formData, {\r\n      headers:{\r\n        'x-auth': localStorage.getItem('authToken')\r\n      }\r\n    })\r\n    .then((response) =>{\r\n     if (response.data.hasOwnProperty('errors')) {\r\n       console.log(response.data);\r\n       const errorMessages = [];\r\n       for (const key in response.data.errors) {\r\n         errorMessages.push(response.data.errors[key].message);\r\n       }\r\n       Swal.fire({\r\n         icon: 'error',\r\n         title: 'Oops...',\r\n         text: `${errorMessages.join(', ')}`,\r\n         confirmButtonText: 'Ok'\r\n       });\r\n     } \r\n     else if(response.data.name === 'MongoError'){\r\n       Swal.fire({\r\n         icon:'error',\r\n         title: 'Oops...',\r\n         text: `name / email are already exists`,\r\n         confirmButtonText: 'Ok'\r\n       })\r\n     }\r\n     else {\r\n       const customer = response.data;\r\n       dispatch(addCustomer(customer));\r\n       redirect();\r\n     }\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const removeCustomer = (id) =>{\r\n  return {\r\n    type:'REMOVE_CUSTOMER', payload: id\r\n  }\r\n}\r\nexport const startRemoveCustomer =(id)=>{\r\n  return(dispatch) =>{\r\n    axios.delete(`/customers/${id}`, {\r\n      headers:{\r\n        'x-auth': localStorage.getItem('authToken')\r\n      }\r\n    })\r\n    .then((response) =>{\r\n      const customer = response.data\r\n      dispatch(removeCustomer(customer._id))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateCustomer = (customer)=>{\r\n  return {type:'UPDATE_CUSTOMER', payload: customer}\r\n}\r\nexport const startUpdateCustomer = (formData, id, redirect)=>{\r\n  return (dispatch) =>{\r\n    axios.put(`/customers/${id}`, formData, {\r\n      headers:{\r\n        'x-auth': localStorage.getItem('authToken')\r\n      }\r\n    })\r\n    .then((response)=>{\r\n      if (response.data.hasOwnProperty('errors')) {\r\n        console.log(response.data);\r\n        const errorMessages = [];\r\n        for (const key in response.data.errors) {\r\n          errorMessages.push(response.data.errors[key].message);\r\n        }\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: `${errorMessages.join(', ')}`,\r\n          confirmButtonText: 'Ok',\r\n        });\r\n      } else if (response.data.name === 'MongoError') {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: `name / email are already exists`,\r\n          confirmButtonText: 'Ok',\r\n        });\r\n      } else {\r\n        const customer = response.data;\r\n        dispatch(updateCustomer(customer));\r\n        redirect();\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n","import axios from '../config/axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const setEmployees = (employees) => {\r\n  return {\r\n    type: 'SET_EMPLOYEES',\r\n    payload: employees,\r\n  };\r\n};\r\n\r\nexport const startSetEmployees = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get('/employees', {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const employees = response.data;\r\n        //console.log('set employees', employees);\r\n        dispatch(setEmployees(employees));\r\n      });\r\n  };\r\n};\r\n\r\nexport const removeEmployee = (id) => {\r\n  return {\r\n    type: 'REMOVE_EMPLOYEE',\r\n    payload: id,\r\n  };\r\n};\r\nexport const startRemoveEmployee = (id, redirect) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(`/employees/${id}`, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const employee = response.data;\r\n        //console.log(\"removed employee\",employee)\r\n        dispatch(removeEmployee(employee._id));\r\n        redirect();\r\n      });\r\n  };\r\n};\r\n\r\nexport const addEmployee = (emp) => {\r\n  return {\r\n    type: 'ADD_EMPLOYEE',\r\n    payload: emp,\r\n  };\r\n};\r\nexport const startAddEmployee = (formData, redirect) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post('/employees', formData, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.hasOwnProperty('errors')) {\r\n          //console.log(\"added employees\",response.data);\r\n          const errorMessages = [];\r\n          for (const key in response.data.errors) {\r\n            errorMessages.push(response.data.errors[key].message);\r\n          }\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `${errorMessages.join(', ')}`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'MongoError') {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `name / email are already exists`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else {\r\n          const emp = response.data;\r\n          // console.log(\"employee\", emp)\r\n          dispatch(addEmployee(emp));\r\n          redirect();\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateEmployee = (dept) => {\r\n  return {\r\n    type: 'UPDATE_EMPLOYEE',\r\n    payload: dept,\r\n  };\r\n};\r\nexport const startUpdateEmployee = (employee, id, redirect) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(`/employees/${id}`, employee, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.hasOwnProperty('errors')) {\r\n          //console.log(response.data);\r\n          const errorMessages = [];\r\n          for (const key in response.data.errors) {\r\n            errorMessages.push(response.data.errors[key].message);\r\n          }\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `${errorMessages.join(', ')}`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'CastError' ) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `${response.data.message}`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'MongoError') {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `name / email are already exists`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else {\r\n          const emp = response.data;\r\n          console.log('updated employee', emp);\r\n          dispatch(updateEmployee(emp));\r\n          redirect();\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateEmployeeDepartment = (department) => {\r\n  return {\r\n    type: 'UPDATE_EMPLOYEE_DEPARTMENT',\r\n    payload: department,\r\n  };\r\n};\r\n","import axios from '../config/axios';\r\nimport { updateEmployeeDepartment } from '../actions/employeesAction';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const setDepartments = (departments) => {\r\n  return {\r\n    type: 'SET_DEPARTMENTS',\r\n    payload: departments,\r\n  };\r\n};\r\n\r\nexport const startSetDepartments = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get('/departments', {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const departments = response.data;\r\n        //console.log('departments', departments);\r\n        dispatch(setDepartments(departments));\r\n      });\r\n  };\r\n};\r\n\r\nexport const removeDepartment = (id) => {\r\n  return {\r\n    type: 'REMOVE_DEPARTMENT',\r\n    payload: id,\r\n  };\r\n};\r\nexport const startRemoveDepartment = (id, redirect) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(`/departments/${id}`, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const department = response.data;\r\n        dispatch(removeDepartment(department._id));\r\n        redirect();\r\n      });\r\n  };\r\n};\r\n\r\nexport const addDepartment = (dept) => {\r\n  return {\r\n    type: 'ADD_DEPARTMENT',\r\n    payload: dept,\r\n  };\r\n};\r\nexport const startAddDepartment = (formData, redirect) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post('/departments', formData, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.hasOwnProperty('errors')) {\r\n          //console.log(response.data);\r\n          const errorMessages = [];\r\n          for (const key in response.data.errors) {\r\n            errorMessages.push(response.data.errors[key].message);\r\n          }\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `${errorMessages.join(', ')}`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'MongoError') {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `Department is already exists`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else {\r\n          const dept = response.data;\r\n          dispatch(addDepartment(dept));\r\n          redirect();\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateDepartment = (dept) => {\r\n  return {\r\n    type: 'UPDATE_DEPARTMENT',\r\n    payload: dept,\r\n  };\r\n};\r\nexport const startUpdateDepartment = (formData, id, redirect) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(`/departments/${id}`, formData, {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.hasOwnProperty('errors')) {\r\n          //console.log(response.data);\r\n          const errorMessages = [];\r\n          for (const key in response.data.errors) {\r\n            errorMessages.push(response.data.errors[key].message);\r\n          }\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `${errorMessages.join(', ')}`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else if (response.data.name === 'MongoError') {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: `Department is already exists`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n        } else {\r\n          const dept = response.data;\r\n          dispatch(updateDepartment(dept));\r\n          redirect();\r\n          dispatch(updateEmployeeDepartment(dept));\r\n        }\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {startSetTickets, startRemoveTicket,\r\n} from '../../actions/tickets1Action';\r\nimport Swal from 'sweetalert2';\r\nimport PendingTicket from './PendingTicket';\r\nimport CompletedTicket from './CompletedTicket';\r\nimport { Progress } from 'reactstrap';\r\nimport PieChart from './PieChart';\r\nimport BarChart from './BarChart';\r\nimport { startSetCustomer } from '../../actions/customerAction';\r\nimport { startSetDepartments } from '../../actions/departmentsAction';\r\nimport { startSetEmployees } from '../../actions/employeesAction';\r\n\r\nclass TicketList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pending: true,\r\n      complete: false,\r\n    };\r\n  }\r\n  handlePending = () => {\r\n    this.setState({\r\n      pending: true,\r\n      complete: false,\r\n    });\r\n  };\r\n  handleComplete = () => {\r\n    this.setState({\r\n      pending: false,\r\n      complete: true,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.props.tickets.length == 0) {\r\n      this.props.dispatch(startSetCustomer());\r\n      this.props.dispatch(startSetDepartments());\r\n      this.props.dispatch(startSetEmployees());\r\n      this.props.dispatch(startSetTickets());\r\n    }\r\n\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        {this.props ? (\r\n          <div>\r\n            <h2>Listing Tickets-{this.props.tickets.length}</h2>\r\n            <nav className=\" navbar navbar-expand-lg navbar-light bg-light\">\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item active\">\r\n                    <button className=\"nav-link\" onClick={this.handlePending}>\r\n                      Pending\r\n                      <span className=\"sr-only\">(current)</span>\r\n                    </button>\r\n                  </li>\r\n                  <li className=\"nav-item active\">\r\n                    <button className=\"nav-link\" onClick={this.handleComplete}>\r\n                      Completed\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n\r\n            {this.state.pending && <PendingTicket />}\r\n            {this.state.complete && <CompletedTicket />}\r\n            <Link to=\"/tickets/new\">\r\n              <button className=\"btn btn-primary btn-sm\">Add Ticket</button>\r\n            </Link>\r\n\r\n            {/* progressbar */}\r\n            <Progress\r\n              animated\r\n              style={{ marginTop: '20px' }}\r\n              value={\r\n                (this.props.tickets.filter((ticket) => ticket.isResolved)\r\n                  .length /\r\n                  this.props.tickets.length) *\r\n                100\r\n              }\r\n            />\r\n\r\n            <div className=\"container\">\r\n              <h3 style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                Data on Pending Tickets\r\n              </h3>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <PieChart />\r\n                </div>\r\n                <div className=\"col-md-6\" style={{ marginTop: '15px' }}>\r\n                  <BarChart />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>loading...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customers: state.customers,\r\n    departments: state.departments,\r\n    employees: state.employees,\r\n    tickets: state.tickets,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(TicketList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findTicket } from '../../selectors/ticketSelector';\r\nimport { Link } from 'react-router-dom';\r\nimport { findCustomer } from '../../selectors/findCustomer';\r\nimport { findDepartment } from '../../selectors/findDepartment';\r\nimport { findEmployee } from '../../selectors/findEmployee';\r\n\r\nfunction TicketShow(props) {\r\n  const { _id, code, customer, department, employees, message, priority } =\r\n    props.ticket || {};\r\n\r\n  return (\r\n    <div className=\"container col-md-6 mt-5\">\r\n      {props.ticket ? (\r\n        <div className=\"card text-center\" style={{ width: '18rem' }}>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">Code - {code}</p>\r\n            <p className=\"card-text\">\r\n              Customer -\r\n              {props.customers.length !== 0 &&\r\n                findCustomer(props.customers, customer)?.name}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              Department -\r\n              {props.departments.length !== 0 &&\r\n                findDepartment(props.departments, department)?.name}\r\n            </p>\r\n            <p className=\"card-text\">\r\n              Employees -\r\n              {props.employees.length !== 0 && \r\n                  employees.length > 0 &&\r\n                    employees.map((emp1, i) => {\r\n                      return (\r\n                        <span key={i}>\r\n                          {findEmployee(props.employees, emp1)?.name}\r\n                        </span>\r\n                      );\r\n                    } \r\n              )}\r\n            </p>\r\n            <p className=\"card-text\">Message - {message}</p>\r\n            <p className=\"card-text\">Priority - {priority}</p>\r\n          </div>\r\n          <p>\r\n            <Link to={`/tickets/edit/${_id}`}>\r\n              <button type=\"button\" className=\"btn btn-primary m-3 btn-sm\">\r\n                Edit\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/tickets\">\r\n              <button type=\"button\" className=\"btn btn-primary btn-sm\">\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>loading.....</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const id = props.match.params.id;\r\n  return {\r\n    ticket: findTicket(state.tickets, id),\r\n    customers: state.customers,\r\n    departments: state.departments,\r\n    employees: state.employees,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(TicketShow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { findTicket } from '../../selectors/ticketSelector';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TicketForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: props.ticket ? props.ticket.code : '',\r\n      customer: props.ticket ? props.ticket.customer : '',\r\n      department: props.ticket ? props.ticket.department : '',\r\n      employeesNewList: [],\r\n      tempEmployee: [],\r\n      employee: props.ticket ? props.ticket.employees : [],\r\n      message: props.ticket ? props.ticket.message : '',\r\n      priority: props.ticket ? props.ticket.priority : '',\r\n    };\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      code: this.state.code,\r\n      customer: this.state.customer,\r\n      department: this.state.department,\r\n      employees: this.state.employee,\r\n      message: this.state.message,\r\n      priority: this.state.priority,\r\n    };\r\n    console.log('formData', formData);\r\n    this.props.ticket && (formData.id = this.props.ticket._id);\r\n    this.props.handleSubmit(formData);\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    let tempEmployee = [];\r\n    {\r\n      this.props.employees.map((employee) => {\r\n        return tempEmployee.push({\r\n          value: employee.name,\r\n          _id: employee._id,\r\n          name: employee.name,\r\n          label: employee.name,\r\n          deptId: employee.department,\r\n        });\r\n      });\r\n      this.setState({ tempEmployee });\r\n    }\r\n    if (e.target.name === 'department') {\r\n      this.setState({\r\n        employeesNewList: this.state.tempEmployee.filter(\r\n          (employee) => employee.deptId === e.target.value\r\n        ),\r\n      });\r\n      console.log('employeeNewList', this.state.employeesNewList);\r\n    }\r\n  };\r\n\r\n  handleMultiChange = (option) => {\r\n    this.setState(() => {\r\n      return {\r\n        employee: option,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"code\">Code</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"code\"\r\n              value={this.state.code}\r\n              onChange={this.handleChange}\r\n              id=\"code\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"customer\">Customer</label>\r\n            <select\r\n              id=\"customer\"\r\n              value={this.state.customer}\r\n              onChange={this.handleChange}\r\n              name=\"customer\"\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"\">Select</option>\r\n              {this.props.customers.map((customer) => {\r\n                return (\r\n                  <option key={customer._id} value={customer._id}>\r\n                    {customer.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"department\">Department</label>\r\n            <select\r\n              id=\"department\"\r\n              value={this.state.department}\r\n              onChange={this.handleChange}\r\n              name=\"department\"\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"\">Select</option>\r\n              {this.props.departments.map((department) => {\r\n                return (\r\n                  <option key={department._id} value={department._id}>\r\n                    {department.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"employees\">Employee</label>\r\n            <Select\r\n              id=\"employees\"\r\n              name=\"employees\"\r\n              placeholder=\"Select\"\r\n              options={this.state.employeesNewList}\r\n              onChange={this.handleMultiChange}\r\n              isMulti\r\n              value={this.state.employee}\r\n            />\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"message\">Message</label>\r\n            <textarea\r\n              value={this.state.message}\r\n              onChange={this.handleChange}\r\n              name=\"message\"\r\n              className=\"form-control\"\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form-group \">\r\n            <label htmlFor=\"priority\">Priority</label>\r\n            <div className=\"form-check form-check-inline pl-3\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={this.state.priority === 'high'}\r\n                value=\"high\"\r\n                name=\"priority\"\r\n                onChange={this.handleChange}\r\n                className=\"form-check-input \"\r\n              /> \r\n              <label className=\"form-check-label\">High</label>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={this.state.priority === 'medium'}\r\n                name=\"priority\"\r\n                value=\"medium\"\r\n                onChange={this.handleChange}\r\n                className=\"form-check-input\"\r\n              />\r\n              <label className=\"form-check-label\">Medium</label>\r\n            </div>\r\n\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                type=\"radio\"\r\n                checked={this.state.priority === 'low'}\r\n                name=\"priority\"\r\n                value=\"low\"\r\n                onChange={this.handleChange}\r\n                className=\"form-check-input\"\r\n              />\r\n              <label className=\"form-check-label\">Low</label>\r\n            </div>\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary m-3\" value=\"submit\" />\r\n          <Link to=\"/tickets\">\r\n            <button type=\"button\" className=\"btn btn-primary\">\r\n              Back\r\n            </button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  const id = props.match.params.id;\r\n  return {\r\n    customers: state.customers,\r\n    departments: state.departments,\r\n    employees: state.employees,\r\n    ticket: findTicket(state.tickets, id),\r\n  };\r\n};\r\nexport default withRouter(connect(mapStateToProps)(TicketForm));\r\n","import React from 'react';\r\nimport TicketForm from './Form';\r\nimport { connect } from 'react-redux';\r\nimport { startAddTicket } from '../../actions/tickets1Action';\r\n\r\nfunction TicketNew(props) {\r\n  const handleSubmit = (formData) => {\r\n    console.log('formdata new', formData);\r\n    const redirect = () => props.history.push('/tickets');\r\n    props.dispatch(startAddTicket(formData, redirect));\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 offset-md-3\">\r\n        <h2 className=\"text-center\" style={{ marginTop: '30px' }}>\r\n          Add Ticket\r\n        </h2>\r\n        <TicketForm handleSubmit={handleSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default connect()(TicketNew);\r\n","import React from 'react';\r\nimport TicketForm from './Form';\r\nimport { connect } from 'react-redux';\r\nimport { startUpdateTicket } from '../../actions/tickets1Action';\r\n\r\nfunction TicketEdit(props) {\r\n  const handleSubmit = (formData) => {\r\n    const id = props.match.params.id;\r\n    console.log('edit ticket', formData);\r\n    const redirect = () => props.history.push('/tickets');\r\n    props.dispatch(startUpdateTicket(formData, id, redirect));\r\n  }; \r\n  return (\r\n    <div className=\"container col-md-5 offset-md-3\">\r\n      <h2 className=\"text-center\" style={{ marginTop: '30px' }}>\r\n        Edit Ticket\r\n      </h2>\r\n      <TicketForm handleSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n}\r\nexport default connect()(TicketEdit);\r\n","import axios from '../config/axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startRegister = (formData, redirect) => {\r\n  return () => {\r\n    axios.post('/users/register', formData).then((response) => {\r\n     // console.log(response.data.error);\r\n      if (response.data.hasOwnProperty('errors')) {\r\n        //console.log(response.data);\r\n        const errorMessages = [];\r\n        for (const key in response.data.errors) {\r\n          errorMessages.push(response.data.errors[key].message);\r\n        }\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: `${errorMessages.join(', ')}`,\r\n          confirmButtonText: 'Ok',\r\n          timer: 1500,\r\n        });\r\n      } else if (response.data.name === 'MongoError') {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: `User is already exists`,\r\n          confirmButtonText: 'Ok',\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: '',\r\n          text: `Successfully signedup`,\r\n          confirmButtonText: 'Ok',\r\n        });\r\n        redirect();\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const setUser = (user) => {\r\n  return { type: 'SET_USER', payload: user };\r\n};\r\n\r\nexport const setStartUser = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get('/users/account', {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const user = response.data;\r\n        dispatch(setUser(user));\r\n      });\r\n  };\r\n};\r\n\r\nexport const startLogin = (formData, redirect) => {\r\n  return (dispatch) => {\r\n    axios.post('/users/login', formData).then((response) => {\r\n      if (response.data.hasOwnProperty('errors')) {\r\n        \r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: `${response.data.errors}`,\r\n          confirmButtonText: 'Ok',\r\n          timer: 100000,\r\n        });\r\n      } else {\r\n        //console.log('user response', response);\r\n        localStorage.setItem('authToken', response.data.token);\r\n        redirect();\r\n        axios\r\n          .get('/users/account', {\r\n            headers: {\r\n              'x-auth': localStorage.getItem('authToken'),\r\n            },\r\n          })\r\n          .then((response) => {\r\n            const user = response.data;\r\n            dispatch(setUser(user));\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: '',\r\n              text: `Successfully loggedin`,\r\n              confirmButtonText: 'Ok'\r\n            });\r\n            redirect();\r\n          });\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeUser = () => {\r\n  return { type: 'REMOVE_USER' };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete('/users/logout', {\r\n        headers: {\r\n          'x-auth': localStorage.getItem('authToken'),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(\"logout\", response)\r\n        if (response.data.notice) {\r\n          localStorage.removeItem('authToken');\r\n          dispatch(removeUser());\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: '',\r\n            text: `Successfully logged out`,\r\n            confirmButtonText: 'Ok',\r\n          });\r\n          window.location.href = '/users/logout';\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startLogin } from '../../actions/userAction';\r\n\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    const redirect = () => {\r\n      return this.props.history.push('/users/home');\r\n    };\r\n    this.props.dispatch(startLogin(formData, redirect));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <h2 className=\"text-center\">Login</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                email\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className='d-grid '>\r\n            <input type=\"submit\" value=\"login\" className=\"btn btn-primary\" />\r\n            </div>  \r\n            <p className='text-center'> or </p>\r\n            <p className='text-center'>\r\n            <Link to='/users/register'>Register</Link>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {startRegister} from '../../actions/userAction';\r\n\r\nclass Register extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      username: this.state.username,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    const redirect = () => {\r\n      return this.props.history.push('/users/login');\r\n    };\r\n    this.props.dispatch(startRegister(formData, redirect));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <h2 className='text-center'>Register </h2>\r\n            <div className='mb-3'>\r\n            <label htmlFor=\"username\" className='form-label'>username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n            </div>\r\n            <div className='mb-3'>\r\n              <label htmlFor=\"email\" className='form-label'>email</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value=\"register\" className=\"btn btn-primary\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Register);\r\n","import React from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Account(props) {\r\n  console.log( 'Account',props);\r\n  return (\r\n    <div>\r\n      <h2>{props.user.username} </h2>\r\n      <h2>{props.user.email} </h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Account);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startSetCustomer } from '../../actions/customerAction';\r\nimport { startRemoveCustomer } from '../../actions/customerAction';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBDataTableV5 } from 'mdbreact' ;\r\n\r\nfunction CustomerList(props) {\r\n  const handleRemove = (id)=>{\r\n    const confirmRemove = window.confirm('are u sure')\r\n    if(confirmRemove){\r\n      console.log(id)\r\n       props.dispatch(startRemoveCustomer(id))\r\n    }\r\n  }\r\n  if (props.customers.length === 0) {\r\n    props.dispatch(startSetCustomer());\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label:'Sl.No',\r\n        field:'slno'\r\n      }\r\n      ,\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n      },\r\n      {\r\n        label: 'Email',\r\n        field: 'email',\r\n      },\r\n      {\r\n        label: 'Mobile',\r\n        field: 'mobile',\r\n      },\r\n      {\r\n        label: 'Actions',\r\n        field: 'actions',\r\n      },\r\n    ],\r\n    rows: props.customers.map((customer,i) => ({\r\n      slno: i+1,\r\n      name: customer.name,\r\n      email: customer.email,\r\n      mobile: customer.mobile,\r\n      actions: (\r\n        <div>\r\n          <Link className='btn btn-secondary btn-sm' to={`/customers/${customer._id}`}>show</Link>\r\n          <button\r\n            className=\"btn btn-danger btn-sm\"\r\n            onClick={() => {\r\n              handleRemove(customer._id);\r\n            }}\r\n          >\r\n            remove\r\n          </button>\r\n        </div>\r\n      ),\r\n    })),\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <h2>Listing Cust-{props.customers.length} </h2>\r\n        <MDBDataTableV5\r\n          data={data}\r\n          hover\r\n          entriesOptions={[5, 20, 25]}\r\n          entries={5}\r\n          pagesAmount={4}\r\n          searchTop\r\n          \r\n          searchBottom={false}\r\n          \r\n        />\r\n        <Link to=\"/customers/new\" className=\"btn btn-primary btn-sm\"> Add Customer</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customers: state.customers,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(CustomerList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findCustomer } from '../../selectors/findCustomer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ShowCustomer(props) {\r\n  const { _id, name, email, mobile } = props.customer || {};\r\n  return (\r\n    <div className=\"container col-md-6 mt-5\">\r\n      {props.customer ? (\r\n        <div className=\"card text-center\" style={{ width: '18rem' }}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Customer Details</h5>\r\n            <p className=\"card-text\"> {name}</p>\r\n            <p className=\"card-text\"> {email}</p>\r\n            <p className=\"card-text\">{mobile}</p>\r\n            <Link to={`/customers/edit/${_id}`}>\r\n              <button type=\"button\" className=\"btn btn-primary m-3 btn-sm\">\r\n                Edit\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/customers\">\r\n              <button type=\"button\" className=\"btn btn-primary btn-sm\">\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>loading....</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n    // <div>\r\n    //   {props.customer ? (\r\n    //     <div>\r\n    //       <h2>{name}-{email}-{mobile} </h2>\r\n\r\n    //       <Link to={`/customers/edit/${_id}`}>Edit</Link> <br />\r\n    //       <Link to=\"/customers\">back</Link>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>loading....</div>\r\n    //   )}\r\n    // </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  const id = props.match.params.id;\r\n  return {\r\n    customer: findCustomer(state.customers, id),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShowCustomer);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { findCustomer } from '../../selectors/findCustomer'\r\n\r\nclass FormCustomer extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        console.log('props',props)\r\n        this.state = {\r\n            name: props.customer? props.customer.name : '',\r\n            email: props.customer? props.customer.email : '',\r\n            mobile: props.customer? props.customer.mobile : ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        const formData = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            mobile: this.state.mobile\r\n        }\r\n       this.props.handleSubmit(formData)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div className='row'>\r\n            <div className='col-md-6 offset-md-3'>\r\n            <form onSubmit={this.handleSubmit} >\r\n              <label htmlFor=\"name\" className='form-label'>name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                className='form-control'\r\n              /> \r\n\r\n              <label htmlFor=\"email\" className='form-label'>email</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                className='form-control'\r\n              />\r\n\r\n              <label htmlFor=\"mobile\" className='form-label'>mobile</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"mobile\"\r\n                name=\"mobile\"\r\n                value={this.state.mobile}\r\n                onChange={this.handleChange}\r\n                className='form-control'\r\n              /><br/>\r\n              <input type='submit' value='submit' className='btn btn-primary btn-sm'/>\r\n            </form>\r\n          </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, props) =>{\r\n  console.log('form', props)\r\n    const id = props.match.params.id\r\n    return {\r\n        customer: findCustomer(state.customers, id)\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(FormCustomer))","import React from 'react'\r\nimport FormCustomer from './Form'\r\nimport {startAddCustomer} from '../../actions/customerAction'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction AddCustomer(props){\r\n    const handleSubmit = (formData) =>{\r\n        const redirect =()=> props.history.push('/customers')\r\n        props.dispatch(startAddCustomer(formData, redirect))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='text-center'> Add Customer</h2>\r\n            <FormCustomer handleSubmit={handleSubmit} /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(AddCustomer)","import React from 'react';\r\nimport FormCustomer from './Form';\r\nimport {startUpdateCustomer} from '../../actions/customerAction';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction EditCustomer(props) {\r\n  const handleSubmit = (formData) => {\r\n    const id = props.match.params.id;\r\n    const redirect = () => props.history.push('/customers');\r\n    props.dispatch(startUpdateCustomer(formData, id, redirect));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='text-center'> Update Customer</h2>\r\n      <FormCustomer handleSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(EditCustomer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { startSetDepartments, startRemoveDepartment } from '../../actions/departmentsAction';\r\nimport { MDBDataTableV5 } from 'mdbreact'\r\n\r\nfunction DepartmentsList(props) {\r\n  if (props.departments.length === 0) {\r\n    props.dispatch(startSetDepartments());\r\n  }\r\n  const handleRemove = (id)=>{\r\n    const confirmRemove = window.confirm('Are you sure')\r\n    if(confirmRemove){\r\n      const redirect=()=>{props.history.push('/departments')}\r\n      props.dispatch(startRemoveDepartment(id, redirect))\r\n    }\r\n  }\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label:'Sl.No',\r\n        field:'slno'\r\n      },\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n      },\r\n      {\r\n        label: 'Actions',\r\n        field: 'actions',\r\n      },\r\n    ],\r\n    rows: props.departments.map((dept, i) => ({\r\n      slno: i+1,\r\n      name: dept.name,\r\n      actions: (\r\n        <div>\r\n          <Link to={`/departments/${dept._id}`} className='btn btn-secondary btn-sm'> show </Link>\r\n          <button className='btn btn-danger btn-sm'\r\n            onClick={() => {\r\n              handleRemove(dept._id);\r\n            }}\r\n          >   remove\r\n          </button>\r\n        </div>\r\n      ),\r\n    })),\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <h2> Departments List-{props.departments.length}</h2>\r\n        <MDBDataTableV5\r\n          data={data}\r\n          hover\r\n          entriesOptions={[5, 20, 25]}\r\n          entries={5}\r\n          pagesAmount={4}\r\n          searchTop\r\n          searchBottom={false}\r\n        />\r\n        <Link to=\"/departments/new\" className=\"btn btn-primary btn-sm\"> Add Department </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    departments: state.departments,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(DepartmentsList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { findDepartment } from '../../selectors/findDepartment';\r\n\r\nclass DepartmentsForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      name: props.department ? props.department.name : ''\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    \r\n  };\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      name: this.state.name,\r\n    };\r\n    console.log('dept',this.props)\r\n    this.props.handleSubmit(formData)\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\" className='form-label'> name </label>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            id='name'\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            className='form-control'\r\n          />\r\n          <br />\r\n          <input type=\"submit\" value=\"submit\" className='btn btn-primary btn-sm'/>\r\n        </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps =(state,props)=>{\r\n    const id= props.match.params.id\r\n    return {\r\n        department: findDepartment(state.departments, id)\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(DepartmentsForm));\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { startAddDepartment } from '../../actions/departmentsAction';\r\nimport DepartmentsForm from '../../Components/departments/Form';\r\n\r\nfunction AddDepartment(props) {\r\n    const handle =(formData)=>{\r\n        const redirect = ()=> {props.history.push('/departments')}\r\n        return props.dispatch(startAddDepartment(formData, redirect))\r\n    }\r\n  return (\r\n    <div>\r\n      <h2 className='text-center'>Add Department</h2>\r\n      <DepartmentsForm handleSubmit={handle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(AddDepartment);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { findDepartment } from '../../selectors/findDepartment'\r\n\r\nfunction DepartmentsShow(props){\r\n    const {_id, name} = props.department || {}\r\n    return (\r\n      <div className=\"container col-md-6 mt-5\">\r\n        {props.department ? (\r\n          <div className=\"card text-center\" style={{ width: '18rem' }}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\"> Department Details  </h5>\r\n              <p className=\"card-text\">{props.department.name}</p>\r\n              <Link to={`/departments/edit/${props.department._id}`}>\r\n                <button type=\"button\" className=\"btn btn-primary m-3 btn-sm\">\r\n                  Edit\r\n                </button>\r\n              </Link>\r\n              <Link to=\"/departments\">\r\n                <button type=\"button\" className=\"btn btn-primary btn-sm\">\r\n                  Back\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>loading...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      // <div>\r\n      //     <h2>Department-{name} </h2>\r\n      //     <Link to={`/departments/edit/${_id}`}>Edit</Link> <br/>\r\n      //     <Link to='/departments'>back</Link>\r\n      // </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state, props)=>{\r\n    console.log(props)\r\n    const id = props.match.params.id\r\n    return {\r\n      department: findDepartment(state.departments, id),\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(DepartmentsShow)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport DepartmentsForm from './Form'\r\nimport { startUpdateDepartment } from '../../actions/departmentsAction'\r\n\r\nfunction DepartmentUpdate(props){\r\n    const handle = (formData)=>{\r\n        const id= props.match.params.id\r\n        const redirect = ()=> {props.history.push('/departments')}\r\n        props.dispatch(startUpdateDepartment(formData, id, redirect))\r\n    }\r\n    return(\r\n        <div>\r\n            <h2>\r\n            <DepartmentsForm handleSubmit={handle}/>\r\n            </h2>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default connect()(DepartmentUpdate)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  startSetEmployees,\r\n  startRemoveEmployee,\r\n} from '../../actions/employeesAction';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport { startSetDepartments } from '../../actions/departmentsAction';\r\n\r\nfunction EmployeesList(props) {\r\n  if (props.employees.length === 0) {\r\n    props.dispatch(startSetEmployees());\r\n    props.dispatch(startSetDepartments());\r\n  }\r\n \r\n  const handleRemove = (id) => {\r\n    const confirmRemove = window.confirm('Are you sure');\r\n    if (confirmRemove) {\r\n      const redirect = () => {\r\n        props.history.push('/employees');\r\n      };\r\n      props.dispatch(startRemoveEmployee(id, redirect));\r\n    }\r\n  };\r\n  const findDepartment = (id) => {\r\n    //console.log('find department',props.departments.find(dept => dept._id === id))\r\n    return props.departments.find((dept) => dept._id === id);\r\n  };\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'Sl.No',\r\n        field: 'slno',\r\n      },\r\n      {\r\n        label: 'Name',\r\n        field: 'name',\r\n      },\r\n      {\r\n        label: 'Email',\r\n        field: 'email',\r\n      },\r\n      {\r\n        label: 'Mobile',\r\n        field: 'mobile',\r\n      },\r\n      {\r\n        label: 'Department',\r\n        field: 'department',\r\n      },\r\n      {\r\n        label: 'Actions',\r\n        field: 'actions',\r\n      },\r\n    ],\r\n    rows: props.employees.map((emp, i) => ({\r\n      slno: i + 1,\r\n      name: emp.name,\r\n      email: emp.email,\r\n      mobile: emp.mobile,\r\n      department: findDepartment(emp.department)?.name,\r\n      actions: (\r\n        <div>\r\n          <Link to={`/employees/${emp._id}`}\r\n            className=\"btn btn-secondary btn-sm\"\r\n          >\r\n            show\r\n          </Link>\r\n          <button\r\n            onClick={() => {\r\n              handleRemove(emp._id);\r\n            }}\r\n            className=\"btn btn-danger btn-sm\"\r\n          >\r\n            remove\r\n          </button>\r\n        </div>\r\n      ),\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <h2> Employees List-{props.employees.length}</h2>\r\n        <MDBDataTableV5\r\n          data={data}\r\n          hover\r\n          entriesOptions={[5, 20, 25]}\r\n          entries={5}\r\n          pagesAmount={4}\r\n          searchTop\r\n          searchBottom={false}\r\n        />\r\n        <Link to=\"/employees/new\" className='btn btn-primary btn-sm'> Add Eployee </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    employees: state.employees,\r\n    departments: state.departments,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EmployeesList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form, Button, FormGroup, Input,Label} from 'reactstrap';\r\nimport { findEmployee } from '../../selectors/findEmployee';\r\n\r\nclass EmployeesForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      name: props.employee ? props.employee.name : '',\r\n      email: props.employee ? props.employee.email: '',\r\n      mobile: props.employee ? props.employee.mobile: '',\r\n      department: props.employee ? props.employee.department: ''\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      name: this.state.name,\r\n      email:this.state.email,\r\n      mobile: this.state.mobile,\r\n      department: this.state.department\r\n    };\r\n    this.props.employee && (formData.id = this.props.employee._id);\r\n    console.log('emp', this.props);\r\n    this.props.handleSubmit(formData);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label htmlFor=\"name\" className='form-label'>Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                  name=\"name\"\r\n                /><br/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label htmlFor=\"email\" className='form-label'>Email</Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                name=\"email\"\r\n              /><br/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label htmlFor=\"mobile\" className='form-label'>Mobile</Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"mobile\"\r\n                value={this.state.mobile}\r\n                onChange={this.handleChange}\r\n                name=\"mobile\"\r\n              /><br/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label htmlFor=\"department\" className='form-label'>Department</Label>\r\n              <Input\r\n                type=\"select\"\r\n                id=\"department\"\r\n                value={this.state.department}\r\n                onChange={this.handleChange}\r\n                name=\"department\"\r\n              >\r\n                <option value=\"\">select</option>\r\n                {this.props.departments.map((department) => {\r\n                  return (\r\n                    <option key={department._id} value={department._id}>\r\n                      {department.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Input>\r\n              <br/>\r\n            </FormGroup>\r\n            <Button type=\"submit\" value=\"submit\" color='primary'>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  const id = props.match.params.id;\r\n  return {\r\n    employee: findEmployee(state.employees, id),\r\n    departments: state.departments\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(EmployeesForm));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startAddEmployee } from '../../actions/employeesAction';\r\nimport EmployeesForm from '../../Components/employees/Form';\r\n\r\nfunction AddEmployee(props) {\r\n  const handle = (formData) => {\r\n    const redirect = () => {\r\n      props.history.push('/employees');\r\n    };\r\n    return props.dispatch(startAddEmployee(formData, redirect));\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-center\">Add Employee</h2>\r\n      <EmployeesForm handleSubmit={handle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(AddEmployee);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { findEmployee } from '../../selectors/findEmployee';\r\n\r\nfunction EmployeesShow(props) {\r\n  const { _id, name, email, mobile } = props.employee || {};\r\n  return (\r\n    <div className=\"container col-md-6 mt-5\">\r\n      {props.employee ? (\r\n        <div className=\"card text-center\" style={{ width: '18rem' }}>\r\n          <div className=\"card-body\">\r\n            <h5>Employee Details</h5>\r\n            <p className=\"card-text\">Name-{name}</p>\r\n            <p className=\"card-text\">Email-{email}</p>\r\n            <p className=\"card-text\">Mobile-{mobile}</p>\r\n            <Link to={`/employees/edit/${_id}`}>\r\n              <button type=\"button\" className=\"btn btn-primary m-3 btn-sm\">\r\n                Edit\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/employees\">\r\n              <button type=\"button\" className=\"btn btn-primary btn-sm\">\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>loading..</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n    // <div>\r\n    //   <h2>Employee-{name} -{email}</h2>\r\n    //   <Link to={`/employees/edit/${_id}`}>edit</Link> <br />\r\n    //   <Link to=\"/employees\">back</Link>\r\n    // </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  console.log(props);\r\n  const id = props.match.params.id;\r\n  return {\r\n    employee: findEmployee(state.employees, id),\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EmployeesShow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EmployeesForm from './Form';\r\nimport { startUpdateEmployee } from '../../actions/employeesAction';\r\n\r\nfunction EmployeeUpdate(props) {\r\n  const handle = (employee) => {\r\n    const id = props.match.params.id;\r\n    const redirect = () => {\r\n      props.history.push('/employees');\r\n    };\r\n    props.dispatch(startUpdateEmployee(employee,id, redirect));\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-center\"> Edit Employee</h2>\r\n      <EmployeesForm handleSubmit={handle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const id = props.match.params.id;\r\n  return {\r\n    employee: state.employees.find((employee) => employee._id === id),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EmployeeUpdate);\r\n","import React from 'react';\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Navbar, NavbarBrand, Nav, NavItem } from 'reactstrap';\n\nimport TicketList from './Components/tickets1/List'\nimport TicketShow from './Components/tickets1/Show'\nimport TicketNew from './Components/tickets1/Add'\nimport TicketEdit from './Components/tickets1/Edit'\n// import TicketsList from './Components/tickets/List'\n// import TicketShow from './Components/tickets/Show'\n// import TicketNew from './Components/tickets/Add'\n// import TicketEdit from './Components/tickets/Edit'\n\nimport Login from './Components/auth/Login';\nimport Register from './Components/auth/Register';\nimport Home from './Components/auth/Home';\n\nimport Account from './Components/auth/Account';\nimport {startLogout} from './actions/userAction';\n\nimport CustomerList from './Components/customers/List';\nimport ShowCustomer from './Components/customers/Show';\nimport AddCustomer from './Components/customers/Add';\nimport EditCustomer from './Components/customers/Edit';\n\nimport DepartmentsList from './Components/departments/List';\nimport AddDepartment from './Components/departments/Add';\nimport DepartmentsShow from './Components/departments/Show';\nimport DepartmentUpdate from './Components/departments/Edit';\n\nimport EmployeesList from './Components/employees/List';\nimport AddEmployee from './Components/employees/Add';\nimport EmployeesShow from './Components/employees/Show';\nimport EmployeeUpdate from './Components/employees/Edit';\n\nfunction App(props) {\n  console.log('app', props);\n  const handleLogout = () => {\n    props.dispatch(startLogout());\n  };\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Navbar color=\"light\" light expand=\"md\" className=\"mb-5\">\n          <Nav className=\"ml-auto\" navbar>\n            <NavbarBrand>Ticket Master</NavbarBrand>\n            <NavItem>\n              <Link className=\"nav-link text-primary\" to=\"/home\">\n                Home\n              </Link>\n            </NavItem>\n\n            {Object.keys(props.user).length === 0 ? (\n              <React.Fragment>\n                <NavItem>\n                  <Link className=\"nav-link text-primary\" to=\"/users/login\">\n                    Login\n                  </Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link text-primary\" to=\"/users/register\">\n                    Register\n                  </Link>\n                </NavItem>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <NavItem>\n                  <Link className=\"nav-link text-primary\" to=\"/customers\">\n                    {' '}\n                    Customers{' '}\n                  </Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link text-primary\" to=\"/users/account\">\n                    {' '}\n                    Account{' '}\n                  </Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link text-primary\" to=\"/departments\">\n                    Departments\n                  </Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link text-primary\" to=\"/employees\">\n                    Employees\n                  </Link>\n                </NavItem>\n                <NavItem>\n                  <Link className='nav-link text-primary' to='/tickets'>Tickets</Link>\n                </NavItem>\n                <NavItem>\n                  <Link\n                    className=\"nav-link text-primary\"\n                    to=\"#\"\n                    onClick={() => {\n                      handleLogout();\n                    }}\n                  >\n                    Logout\n                  </Link>\n                </NavItem>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar>\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/users/login\" component={Login} />\n            <Route path=\"/users/register\" component={Register} />\n            <Route path=\"/users/account\" component={Account} />\n\n            <Route path=\"/customers\" component={CustomerList} exact={true} />\n            <Route path=\"/customers/new\" component={AddCustomer} />\n            <Route path=\"/customers/edit/:id\" component={EditCustomer} />\n            <Route path=\"/customers/:id\" component={ShowCustomer} />\n\n            <Route path=\"/departments\"component={DepartmentsList} exact={true} />\n            <Route path=\"/departments/new\" component={AddDepartment} />\n            <Route path=\"/departments/edit/:id\"  component={DepartmentUpdate}exact={true} />\n            <Route path=\"/departments/:id\" component={DepartmentsShow} exact={true} />\n        \n            <Route path=\"/employees\" component={EmployeesList} exact={true} />\n            <Route path=\"/employees/new\" component={AddEmployee} />\n            <Route path=\"/employees/edit/:id\" component={EmployeeUpdate} />\n            <Route path=\"/employees/:id\" component={EmployeesShow} />\n\n            <Route path='/tickets' component={TicketList} exact={true} />\n            <Route path='/tickets/new' component={TicketNew} />\n            <Route path='/tickets/edit/:id' component={TicketEdit} />\n            <Route path='/tickets/:id' component={TicketShow} /> \n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","const initialState = {}\r\nconst userReducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SET_USER':{\r\n            return  {...action.payload}\r\n        }\r\n        case 'REMOVE_USER':{\r\n            return initialState\r\n        }\r\n        default:{\r\n            return {...state}\r\n        }\r\n    }\r\n}\r\n\r\nexport default userReducer","const initialState = [];\r\n\r\nconst customersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_CUSTOMER': {\r\n      return [...state, action.payload]\r\n    }\r\n    case 'SET_CUSTOMER': {\r\n      return [...action.payload];\r\n    }\r\n    case 'REMOVE_CUSTOMER': {\r\n      return state.filter(customer => customer._id !== action.payload)\r\n    }\r\n    case 'UPDATE_CUSTOMER':{\r\n      return state.map(customer =>{\r\n        if(customer._id === action.payload._id){\r\n          return {...customer, ...action.payload}\r\n        }\r\n        else{\r\n          return {...customer}\r\n        }\r\n      })\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\n\r\nexport default customersReducer;\r\n","const initialState = []\r\n\r\nconst departmentsReducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case 'SET_DEPARTMENTS':{\r\n            return [...action.payload]\r\n        }\r\n        case 'REMOVE_DEPARTMENT':{\r\n            return state.filter(dept => dept._id !== action.payload)\r\n        }\r\n        case 'ADD_DEPARTMENT':{\r\n            return [...state, action.payload]\r\n        }\r\n        case 'UPDATE_DEPARTMENT':{\r\n            return state.map(dept =>{\r\n                if(dept._id === action.payload._id){\r\n                    return {...dept, ...action.payload}\r\n                }\r\n                else{\r\n                    return {...dept}\r\n                }\r\n            })\r\n        }\r\n        default :{\r\n            return [...state]\r\n        }\r\n    }\r\n}\r\n\r\nexport default departmentsReducer","const initialState = []\r\n\r\nconst employeesReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n      case 'SET_EMPLOYEES': {\r\n        return [...action.payload];\r\n        //return [].concat(state,action.payload)\r\n      }\r\n      case 'REMOVE_EMPLOYEE': {\r\n        return state.filter((emp) => emp._id !== action.payload);\r\n      }\r\n      case 'ADD_EMPLOYEE': {\r\n        return [...state, action.payload];\r\n      }\r\n      case 'UPDATE_EMPLOYEE': {\r\n        return state.map((emp) => {\r\n          if (emp._id === action.payload._id) {\r\n            return { ...emp, ...action.payload };\r\n          } else {\r\n            return { ...emp };\r\n          }\r\n        });\r\n      }\r\n      // case 'UPDATE_EMPLOYEE_DEPARTMENT': {\r\n      //   return state.map((employee) => {\r\n      //     if (employee.department._id === action.payload._id) {\r\n      //       employee.department = action.payload._id;\r\n      //       return { ...employee };\r\n      //     } else {\r\n      //       return { ...employee };\r\n      //     }\r\n      //   });\r\n      // }\r\n\r\n      default: {\r\n        return [...state];\r\n      }\r\n    }\r\n}\r\n\r\nexport default employeesReducer\r\n","const ticketsInitialState = [];\r\nconst ticketsReducer = (state = ticketsInitialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TICKETS': {\r\n      return [...action.payload];\r\n    }\r\n    case 'UPDATE_STATUS': {\r\n      return state.map((ticket) => {\r\n        if (ticket._id == action.payload._id) {\r\n          return action.payload;\r\n        } else {\r\n          return ticket;\r\n        }\r\n      });\r\n    }\r\n    case 'ADD_TICKET': {\r\n      return [...state, action.payload];\r\n    }\r\n    case 'REMOVE_TICKET': {\r\n      return state.filter((ticket) => ticket._id != action.payload);\r\n    }\r\n    case 'UPDATE_TICKET': {\r\n      return state.map((ticket) => {\r\n        if (ticket._id == action.payload._id) {\r\n          return { ...ticket, ...action.payload };\r\n        } else {\r\n          return { ...ticket };\r\n        }\r\n      });\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\nexport default ticketsReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from \"../reducers/userReducer\";\r\nimport customersReducer from \"../reducers/customerReducer\";\r\nimport departmentsReducer from \"../reducers/departmentsReducer\";\r\nimport employeesReducer from '../reducers/employeesReducer';\r\n//import ticketsReducer from '../reducers/ticketsReducer';\r\nimport ticketsReducer from \"../reducers/tickets1Reducer\";\r\nconst configureStore = ()=>{\r\n    const store = createStore(combineReducers({\r\n        user: userReducer,\r\n        customers: customersReducer,\r\n        departments: departmentsReducer,\r\n        employees: employeesReducer,\r\n        tickets: ticketsReducer\r\n    }), applyMiddleware(thunk))\r\n    return store\r\n}\r\n\r\nexport default configureStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport {setStartUser} from './actions/userAction';\nimport {startSetCustomer} from './actions/customerAction';\nimport { startSetDepartments } from './actions/departmentsAction';\nimport { startSetEmployees } from './actions/employeesAction';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { startSetTickets } from './actions/tickets1Action';\n\nconst store = configureStore();\n//console.log(store.getState());\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\n//handle page reloads\nif(localStorage.getItem('authToken')){\n  store.dispatch(setStartUser())\n  store.dispatch(startSetCustomer())\n  store.dispatch(startSetDepartments())\n  store.dispatch(startSetEmployees())\n  store.dispatch(startSetTickets())\n}\n\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(jsx, document.getElementById('root'));\n"],"sourceRoot":""}